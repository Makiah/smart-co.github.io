{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/routes/db-analysis/db-analysis.component.ts","webpack:///./src/app/routes/ehr-instructions/ehr-instructions.component.ts","webpack:///./src/app/routes/entry-and-visualization/data-merging.ts","webpack:///./src/app/routes/entry-and-visualization/filterable-search/filterable-search.component.ts","webpack:///./src/app/routes/entry-and-visualization/genomic-data-providers/mygeneinfo-search.service.ts","webpack:///./src/app/routes/entry-and-visualization/genomic-data-providers/myvariantinfo-search.service.ts","webpack:///./src/app/routes/entry-and-visualization/genomic-data-providers/utilities/json-navigator.service.ts","webpack:///./src/app/routes/entry-and-visualization/genomic-data.ts","webpack:///./src/app/routes/entry-and-visualization/variant-entry-and-visualization.component.ts","webpack:///./src/app/routes/entry-and-visualization/variant-selector/variant-selector.component.ts","webpack:///./src/app/routes/entry-and-visualization/variant-selector/variant-selector.service.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.component.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.service.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/drugs/drug-details-modal.component.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/drugs/drug.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/drugs/drugs-search.service.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/gene/gene-information.component.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/variant-visualization.component.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/variant/classifications-modal.component.ts","webpack:///./src/app/routes/entry-and-visualization/variant-visualization/variant/variant-information.component.ts","webpack:///./src/app/routes/feedback-form/feedback-form-modal.component.ts","webpack:///./src/app/routes/home/home.component.ts","webpack:///./src/app/routes/team/team.component.ts","webpack:///./src/app/smart-initialization/smart-launch.component.ts","webpack:///./src/app/smart-initialization/smart-reference.service.ts","webpack:///./src/app/smart-initialization/smart-token-reception.component.ts","webpack:///./src/app/universal-components/github-fork-us.component.ts","webpack:///./src/app/universal-components/header.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from \"@angular/core\";\nimport { RouterModule, Routes } from \"@angular/router\";\n\nimport { SMARTLaunchComponent } from \"./smart-initialization/smart-launch.component\";\nimport { SMARTTokenReceptionComponent } from \"./smart-initialization/smart-token-reception.component\";\nimport { VariantEntryAndVisualizationComponent } from \"./routes/entry-and-visualization/variant-entry-and-visualization.component\";\nimport { EHRInstructionsComponent } from \"./routes/ehr-instructions/ehr-instructions.component\";\nimport { LandingPageComponent } from \"./routes/home/home.component\";\nimport { TeamComponent } from \"./routes/team/team.component\";\nimport { DBAnalysisComponent } from \"./routes/db-analysis/db-analysis.component\";\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"/home\", pathMatch: \"full\" },\n  { path: \"smart-launch\", component: SMARTLaunchComponent },\n  { path: \"token-reception\", component: SMARTTokenReceptionComponent },\n  { path: \"app\", component: VariantEntryAndVisualizationComponent },\n  { path: \"ehr-link\", component: EHRInstructionsComponent },\n  { path: \"home\", component: LandingPageComponent },\n  { path: \"team\", component: TeamComponent },\n  { path: \"db-analysis\", component: DBAnalysisComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule {}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"app-root\",\n  template: `\n    <github-fork-us></github-fork-us>\n    <header></header>\n    <router-outlet></router-outlet>\n  `,\n})\nexport class AppComponent {\n}\n","// Modules\nimport { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\nimport { UiSwitchModule } from \"../../node_modules/angular2-ui-switch/src\";\n\n// Components\nimport { AppComponent } from \"./app.component\";\nimport { VariantSelectorComponent } from \"./routes/entry-and-visualization/variant-selector/variant-selector.component\";\nimport { SMARTLaunchComponent } from \"./smart-initialization/smart-launch.component\";\nimport { SMARTTokenReceptionComponent } from \"./smart-initialization/smart-token-reception.component\";\nimport { FilterableSearchComponent } from \"./routes/entry-and-visualization/filterable-search/filterable-search.component\";\nimport { ClinicalTrialsComponent } from \"./routes/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.component\";\nimport { DrugDetailsModalComponent } from \"./routes/entry-and-visualization/variant-visualization/drugs/drug-details-modal.component\";\nimport { GeneInformationComponent } from \"./routes/entry-and-visualization/variant-visualization/gene/gene-information.component\";\nimport { VariantInformationComponent } from \"./routes/entry-and-visualization/variant-visualization/variant/variant-information.component\";\nimport { VariantVisualizationComponent } from \"./routes/entry-and-visualization/variant-visualization/variant-visualization.component\";\nimport { EHRInstructionsComponent } from \"./routes/ehr-instructions/ehr-instructions.component\";\nimport { FeedbackFormModalComponent } from \"./routes/feedback-form/feedback-form-modal.component\";\nimport { HeaderComponent } from \"./universal-components/header.component\";\nimport { ClassificationsModalComponent } from \"./routes/entry-and-visualization/variant-visualization/variant/classifications-modal.component\";\nimport { VariantEntryAndVisualizationComponent } from \"./routes/entry-and-visualization/variant-entry-and-visualization.component\";\nimport { LandingPageComponent } from \"./routes/home/home.component\";\nimport { GithubForkUsComponent } from \"./universal-components/github-fork-us.component\";\nimport { TeamComponent } from \"./routes/team/team.component\";\n\n// Services\nimport { SMARTReferenceService } from \"./smart-initialization/smart-reference.service\";\nimport { MyVariantInfoSearchService } from \"./routes/entry-and-visualization/genomic-data-providers/myvariantinfo-search.service\";\nimport { ClinicalTrialsService } from \"./routes/entry-and-visualization/variant-visualization/clinical-trials/clinical-trials.service\";\nimport { VariantSelectorService } from \"./routes/entry-and-visualization/variant-selector/variant-selector.service\";\nimport { DrugsSearchService } from \"./routes/entry-and-visualization/variant-visualization/drugs/drugs-search.service\";\nimport { MyGeneInfoSearchService } from \"./routes/entry-and-visualization/genomic-data-providers/mygeneinfo-search.service\";\nimport { JSONNavigatorService } from \"./routes/entry-and-visualization/genomic-data-providers/utilities/json-navigator.service\";\nimport { DBAnalysisComponent } from \"./routes/db-analysis/db-analysis.component\";\n\n@NgModule({\n  imports:      [\n    BrowserModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    NgbModule.forRoot(),\n    UiSwitchModule\n  ],\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    VariantEntryAndVisualizationComponent,\n    VariantVisualizationComponent,\n    VariantSelectorComponent,\n    SMARTLaunchComponent,\n    SMARTTokenReceptionComponent,\n    FilterableSearchComponent,\n    VariantInformationComponent,\n    ClinicalTrialsComponent,\n    GeneInformationComponent,\n    DrugDetailsModalComponent,\n    ClassificationsModalComponent,\n    EHRInstructionsComponent,\n    LandingPageComponent,\n    GithubForkUsComponent,\n    FeedbackFormModalComponent,\n    TeamComponent,\n    DBAnalysisComponent\n  ],\n  entryComponents: [\n    DrugDetailsModalComponent, // Since it enters later on in the flow.\n    ClassificationsModalComponent,\n    FeedbackFormModalComponent\n  ],\n  providers: [\n    SMARTReferenceService,\n    VariantSelectorService,\n    MyVariantInfoSearchService,\n    MyGeneInfoSearchService,\n    ClinicalTrialsService,\n    DrugsSearchService,\n    JSONNavigatorService\n  ],\n  bootstrap: [\n    AppComponent\n  ]\n})\nexport class AppModule { }\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"db-analysis\",\n  template: `\n    <div class=\"infoCard\">\n      <div class=\"cardContent\">\n        <div>\n          <h1 class=\"thick\">Why Database Analysis?</h1>\n          <hr>\n          <p class=\"regular\">A pressing issue currently in the research community is that of \"research parasites\": those who profit off of the research done by other labs without contributing anything meaningful and new.  By carrying out analysis on the each prominent oncology database, we hope to foster a symbiotic relationship between this app and its information sources.  </p>\n        </div>\n      </div>\n      <div class=\"cardImage\">\n        <div>\n          <img src=\"/assets/db-analysis/civic-oncokb-comparison.png\" class=\"dbAnalysisImage\">\n          <img src=\"/assets/db-analysis/civic-oncokb-comparison-2.png\" class=\"dbAnalysisImage\">\n          <img src=\"/assets/db-analysis/clinvar-civic-oncokb-comparison.png\" class=\"dbAnalysisImage\">\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .infoCard {\n      margin: 10px 5px;\n      overflow: hidden;\n    }\n\n    .cardContent {\n      float: left;\n      width: 100%;\n    }\n\n    .cardImage {\n      float: left;\n      width: 100%;\n      min-width: 150px;\n      max-width: 100%;\n    }\n\n    .cardImage>div, .cardContent>div {\n      float: left;\n      background-color: white;\n      box-shadow: 1px 3px #d5d5d5;\n      border: 1px solid #d1d1d1;\n      padding: 15px;\n      margin: 7px 3px;\n    }\n    \n    .dbAnalysisImage {\n      width: 33.333%;\n      height: auto;\n      float: left;\n    }\n  `]\n})\nexport class DBAnalysisComponent {\n\n}\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"ehr-instructions\",\n  template: `\n    <div id=\"wrapper\">\n      <div class=\"instructionBlock\">\n        <h2 class=\"display-2\" style=\"text-align: center;\">EHR Link Example</h2>\n      </div>\n      <hr>\n      <div class=\"instructionBlock\">\n        <h4 class=\"display-4 instructionHeading\">Linking the app to the sandbox</h4>\n        <p class=\"regular\">Navigate to <a href=\"https://sandbox.hspconsortium.org\">the HSPC Sandbox</a>, and create a new account.</p>\n        <img style=\"width: 100%\" src=\"/assets/ehr-link/create-account.png\">\n        <br>\n        <p class=\"regular\">Then, you will have to create a new sandbox.  Do so with the FHIR STU3 specification.</p>\n        <p class=\"regular\">Following the sandbox creation, navigate to the \"Registered Apps\" section and click \"Register new app manually\".  Enter the following parameters: </p>\n        <img style=\"width: 70%\" src=\"/assets/ehr-link/registering-app.png\">\n      </div>\n      <br>\n      \n      <div class=\"instructionBlock\">\n        <h4 class=\"display-4 instructionHeading\">Building a launch scenario</h4>\n        <p class=\"regular\">With your new registered app, create a new Practitioner Persona.  Then, create a new launch scenario for the app with any patient and practitioner persona you desire.</p>\n        <p style=\"color: red\">(NOTE: Ensure that you link the launch scenario to the SMART Cancer Navigator app registration you created in the previous step).  </p>\n        <img style=\"width: 40%\" src=\"/assets/ehr-link/launching-scenario.png\">\n      </div>\n      <br>\n      \n      <div class=\"instructionBlock\">\n        <h4 class=\"display-4 instructionHeading\">Launching the application</h4>\n        <p class=\"regular\">First, take note of the Client ID for the application.  This long string is required for the application to access the sandbox data.</p>\n        <img style=\"width: 40%\" src=\"/assets/ehr-link/getting-client-id.png\">\n        <br>\n        <p class=\"regular\">Now, click \"Launch\" on your launch scenario.  Upon beginning the app, you should be prompted for your client ID.  Paste in the one you obtained prior.</p>\n        <img style=\"width: 80%\" src=\"/assets/ehr-link/entering-info.png\">\n        <br>\n        <p>Congrats, you're done!</p>\n      </div>\n    </div>\n  `,\n  styles: [`\n    #wrapper {\n      padding: 5px;\n      margin: 15px 50px;\n    }\n\n    .instructionBlock {\n      border: 1px solid #cecece;\n      box-shadow: 1px 3px #cfcfcf;\n      background-color: white;\n      padding: 10px;\n      text-align: center;\n    }\n\n    .instructionHeading {\n      text-align: center;\n    }\n\n    .instructionBlock p {\n      font-size: 20px;\n    }\n\n    .display-2 {\n      font-weight: 550;\n    }\n\n    .display-4 {\n      font-weight: 500;\n    }\n\n  `]\n})\nexport class EHRInstructionsComponent {\n}\n","/**\n * These interfaces make it easier to ensure merging standards.\n */\nexport interface IMergeable {\n  mergeable: (other: IMergeable) => boolean;\n  merge: (other: IMergeable) => void;\n}\n\nexport const MergeProperties = (property1: any, property2: any): any => {\n  if (typeof property1 !== typeof property2) {\n    console.log(property1 + \" and \" + property2 + \" have a type mismatch, since \" + typeof property1 + \" is not \" + typeof property2);\n    return property1;\n  }\n\n  // Merge arrays.\n  if (property1 instanceof Array) {\n    const addToArray = (toAdd: any) => {\n      for (const value of mergedArray) {\n        if (value === toAdd) {\n          return;\n        }\n      }\n      mergedArray.push(toAdd);\n    };\n    const mergedArray = Array.from(property1);\n    for (const value of property2) {\n      addToArray(value);\n    }\n  }\n\n  if (property1) {\n    if (property2) {\n      if (property1 !== property1)  {\n        console.log(\"Conflicting values between \" + property1 + \" and \" + property2);\n      }\n      return property1;\n    } else {\n      return property1;\n    }\n  } else {\n    return property2;\n  }\n};\n","/**\n * Since the amount of data that one would have to parse through in a dropdown list while dealing\n * with genomic data is far too vast to be encompassed in a single select field, the filterable search\n * box is a vastly preferable alternative.  What\"s nice about Angular is that - using Observables -\n * the options access can be delayed in asynchronous fashion.\n */\n\nimport { AfterViewInit, forwardRef, Component, ElementRef, EventEmitter, HostListener, Input, OnInit, Output, ViewChild } from \"@angular/core\";\n\n// Observable class extensions\nimport \"rxjs/add/observable/of\";\n\n// Observable operators\nimport { Observable } from \"rxjs/Observable\";\nimport { Subject } from \"rxjs/Subject\";\nimport \"rxjs/add/operator/catch\";\nimport \"rxjs/add/operator/debounceTime\";\nimport \"rxjs/add/operator/distinctUntilChanged\";\nimport \"rxjs/add/operator/switchMap\";\n\n\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from \"@angular/forms\";\n\nexport const CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => FilterableSearchComponent),\n  multi: true\n};\n\n/**\n * Ensure that all options have an accessible name.\n */\nexport interface IFilterableSearchOption {\n  optionName: () => string;\n}\n\n/**\n * A standard for all filterable search services: a single method which returns either a http request, or\n * an observable of options.\n */\nexport interface IFilterableSearchService {\n  search: (term: string) => Observable <IFilterableSearchOption[]>;\n}\n\n@Component({\n  selector: \"filterable-search\",\n  template: `\n    <div #PopupToggle class=\"filterToggle\" (click)=\"toggleMenu(true)\" [style.border-bottom]=\"menuCurrentlyOpen ? '0' : '1px solid #dadada'\">\n      <img src=\"/assets/entry-and-visualization/dropdown.svg\"/>\n      \n      <!-- Display selected option before click -->\n      <p *ngIf=\"currentlySelected !== undefined && currentlySelected !== null\" [hidden]=\"menuCurrentlyOpen\" style=\"font-style: normal; font-weight: bold;\">{{currentlySelected.optionName()}}</p>\n      <p *ngIf=\"currentlySelected === undefined || currentlySelected === null\" [hidden]=\"menuCurrentlyOpen\" style=\"font-style: italic; font-weight: normal;\">{{placeholderString}}</p>\n      \n      <!-- Switch from p to input on click -->\n      <input autocomplete=\"off\" #SearchBox [hidden]=\"!menuCurrentlyOpen\" (keyup)=\"search(SearchBox.value)\" placeholder=\"Search\" class=\"filterInput form-control\"/>\n    </div>\n\n    <!-- Suggestions for potential selections -->\n    <div #PopupPanel class=\"filterPanel\" [hidden]=\"!menuCurrentlyOpen\" [style.width.px]=\"desiredPopupWidth\" [style.height.px]=\"(options | async)?.length < 6 ? (options | async)?.length * 48 : 288\">\n      <table class=\"table table-hover\">\n        <tr *ngFor=\"let option of options | async\">\n          <td (click)=\"onSelection(option)\">{{option.optionName()}}</td>\n        </tr>\n      </table>\n    </div>\n  `,\n  styles: [`\n    .filterToggle {\n      width: 100%;\n      height: 38px;\n\n      margin: 0;\n\n      font-size: 18px;\n      cursor: pointer;\n\n      border: 1px solid #dadada;\n      background-color: white;\n      overflow: hidden;\n    }\n\n    .filterToggle:hover {\n      background-color: #efefef;\n    }\n\n    .filterToggle p {\n      float: left;\n      width: calc(100% - 43px);\n      margin: 5px 5px 5px 10px;\n    }\n\n    .filterToggle img {\n      float: right;\n      width: 20px;\n      height: 20px;\n      margin-top: 9px;\n      margin-right: 5px;\n    }\n\n    .filterToggle input {\n      width: calc(100% - 28px);\n      height: 36px;\n      margin: 0;\n    }\n\n    .filterPanel {\n      display: block;\n      position: absolute;\n      z-index: 1000;\n\n      background-color: white;\n\n      border: 1px solid #dadada;\n      border-top: 0;\n      \n      height: 95px;\n\n      overflow: scroll;\n    }\n\n    .filterInput {\n      width: 100%;\n    }\n  `],\n  providers: [CUSTOM_INPUT_CONTROL_VALUE_ACCESSOR]\n})\nexport class FilterableSearchComponent implements OnInit, AfterViewInit, ControlValueAccessor {\n  constructor(myElement: ElementRef) {\n    this.elementRef = myElement;\n  }\n  elementRef: ElementRef;\n\n  @Input() placeholderString: string;\n  @Input() searchService: IFilterableSearchService; // Provide the component with the appropriate search service on instantiation.\n\n  @ViewChild(\"SearchBox\") searchBox: any;\n  @ViewChild(\"PopupToggle\") popupToggle: any;\n\n  desiredPopupWidth: number; // Set in code and updated to DOM via Angular\n  menuCurrentlyOpen = false; // Used to toggle between display and filter mode.\n  searchTerms = new Subject<string>();\n  options: Observable<IFilterableSearchOption[]>;\n\n  // The internal data model (for ngModel)\n  _currentlySelected: IFilterableSearchOption = null;\n  get currentlySelected(): IFilterableSearchOption {\n    return this._currentlySelected;\n  }\n  set currentlySelected(v: IFilterableSearchOption) {\n    if (v !== this.currentlySelected) {\n      this._currentlySelected = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: IFilterableSearchOption) {\n    if (value !== this.currentlySelected) {\n      this.currentlySelected = value;\n    }\n  }\n\n  // Placeholders for the callbacks which are later providesd by the Control Value Accessor\n  private onTouchedCallback: () => void = () => {};\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  private onChangeCallback: (_: any) => void = () => {};\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n\n  // For when the user clicks outside of the dropdown.\n  @HostListener(\"document:click\", [\"$event\"])\n  handleClick(event) {\n    let clickedComponent = event.target;\n    let inside = false;\n    do {\n      if (clickedComponent === this.elementRef.nativeElement) {\n        inside = true;\n      }\n      clickedComponent = clickedComponent.parentNode;\n    } while (clickedComponent);\n    if (inside) {\n    } else {\n      this.menuCurrentlyOpen = false;\n    }\n  }\n\n\n  /**\n   * Automatically resize the popup menu upon creating the menu or resizing the window.\n   */\n  toggleMenu (newState?: boolean): void {\n    if (newState && typeof newState === \"boolean\") {\n      if (this.menuCurrentlyOpen === newState) {\n        return;\n      }\n      this.menuCurrentlyOpen = newState;\n    } else {\n      this.menuCurrentlyOpen = !this.menuCurrentlyOpen;\n    }\n\n    if (!this.menuCurrentlyOpen) {\n      return;\n    }\n\n    this.recalculatePopupWidth();\n\n    // Doesn\"t work without timeout...\n    setTimeout(() => this.searchBox.nativeElement.focus(), 50);\n  }\n\n  ngAfterViewInit() {\n    // Otherwise \"Expression changed after checked error\"\n    setTimeout(() => this.recalculatePopupWidth(), 50);\n  }\n\n  @HostListener(\"window:resize\", [\"$event\"])\n  onResize(event) {\n    this.recalculatePopupWidth();\n  }\n\n  recalculatePopupWidth = () => {\n    this.desiredPopupWidth = this.popupToggle.nativeElement.offsetWidth;\n  }\n\n\n  /**\n   * Setting search services and the rest of the required components for this filterable search is important\n   * to its functionality.\n   */\n  ngOnInit(): void {\n    /**\n     * Refer to https://blog.thoughtram.io/angular/2016/01/06/taking-advantage-of-observables-in-angular2.html.\n     * This is essentially subscribing the options to the searchTerms.\n     */\n    this.options = this.searchTerms\n      .debounceTime(100)        // wait 300ms after each keystroke before considering the term\n      .distinctUntilChanged()   // ignore if next search term is same as previous\n      .switchMap(term => term   // switch to new observable each time the term changes (ternary operator)\n        ? this.searchService.search(term) // return the http search observable\n        : Observable.of<IFilterableSearchOption[]>([])) // or the observable of empty options if there was no search term\n      .catch(error => {\n        // TODO: add real error handling\n        console.log(\"Search Service Error\", error);\n        return Observable.of<IFilterableSearchOption[]>([]);\n      });\n  }\n\n  // Provide the component with a callback for when an option is selected.\n  onSelection(option: IFilterableSearchOption): void {\n    this.currentlySelected = option;\n    this.menuCurrentlyOpen = false;\n    console.log(\"Got chosen\", option);\n  }\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  clearField = () => {\n    this.currentlySelected = null;\n  }\n}\n\n","/**\n * MyVariant.info compiles variant database information from across the web and provides in an easy-to-query\n * online API.\n */\nimport { Observable } from \"rxjs/Observable\";\nimport { Pathway, Variant } from \"../genomic-data\";\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { JSONNavigatorService } from \"./utilities/json-navigator.service\";\nimport { IGeneDatabase } from \"../variant-selector/variant-selector.service\";\n\n\n/**\n * Since the myvariant.info response JSON is MASSIVE and depends to a large extent on the query, these locations\n * map the keys of the JSON where values may be stored.\n */\n\n\nconst GENE_DATA_LOCATIONS = {\n  \"Aliases\": [\n    \"alias[]\"\n  ]\n};\n\n@Injectable()\nexport class MyGeneInfoSearchService implements IGeneDatabase {\n\n  constructor (private http: HttpClient, private jsonNavigator: JSONNavigatorService) {}\n\n  public updateVariantOrigin = (variant: Variant): Observable<Variant> => {\n    if (!variant.origin || !variant.origin.entrezID) {\n      console.log(\"Resulting variant is \", variant);\n      console.log(\"Required fields for a gene query were not provided, variant.origin is \" + variant.origin + \" and entrez ID is \" + variant.origin.entrezID);\n      return Observable.of(variant);\n    }\n\n    // Query for gene stuff.\n    return this.http.get(\"https://mygene.info/v3/gene/\" + variant.origin.entrezID)\n      .map(response => {\n        console.log(\"Got for gene annotation \", response);\n\n        if (response[\"name\"]) {\n          variant.origin.name = response[\"name\"];\n        }\n        if (response[\"alias\"]) {\n          if (response[\"alias\"] instanceof Array) {\n            variant.origin.aliases = response[\"alias\"];\n          } else {\n            variant.origin.aliases = [response[\"alias\"]];\n          }\n        }\n        if (response[\"summary\"]) {\n          variant.origin.description = response[\"summary\"];\n        }\n        if (response[\"type_of_gene\"]) {\n          variant.origin.type = response[\"type_of_gene\"];\n        }\n\n        if (response[\"genomic_pos\"]) {\n          variant.origin.chromosome = response[\"genomic_pos\"].chr;\n          variant.origin.start = response[\"genomic_pos\"].start;\n          variant.origin.end = response[\"genomic_pos\"].end;\n          variant.origin.strand = response[\"genomic_pos\"].strand;\n        }\n\n        if (response[\"pathway\"] && response[\"pathway\"].wikipathways) {\n          for (const wikipathway of response[\"pathway\"].wikipathways) {\n            variant.origin.pathways.push(new Pathway(wikipathway.id, wikipathway.name));\n          }\n        }\n\n        return variant;\n      });\n  }\n}\n","/**\n * MyVariant.info compiles variant database information from across the web and provides in an easy-to-query\n * online API.\n */\nimport { Observable } from \"rxjs/Observable\";\nimport {Classification, Gene, GeneReference, Variant, VariantReference} from \"../genomic-data\";\nimport { DrugReference } from \"../variant-visualization/drugs/drug\";\n\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport { JSONNavigatorService } from \"./utilities/json-navigator.service\";\nimport { IVariantDatabase } from \"../variant-selector/variant-selector.service\";\n\nimport \"rxjs/add/observable/of\";\nimport \"rxjs/add/observable/empty\";\n\n/**\n * Since the myvariant.info response JSON is MASSIVE and depends to a large extent on the query, these locations\n * map the keys of the JSON where values may be stored.\n */\nconst MY_VARIANT_LOCATIONS = {\n  \"GeneHUGO\": [\n    \"civic.entrez_name\",\n    \"cadd.gene.genename\",\n    \"cgi.gene\",\n    \"docm.default_gene_name\",\n    \"docm.gene_name\",\n    \"snpeff.genename\",\n    \"snpeff.gene_id\",\n    \"clinvar.gene.symbol\" \n  ],\n  \"VariantName\": [\n    \"civic.name\",\n    \"dbnsfp.mutationtaster.AAE[0]\",\n    \"dbnsfp.mutpred.aa_change\"/*,\n    \"cgi.protein_change (of format BRAF:p.V600E)\",\n    \"docm.aa_change (p. V600E)\",\n    \"emv.egl_protein (p.Val600Glu | p.V600E)\"\n    */\n  ],\n  \"EntrezID\": [\n    \"civic.entrezID\",\n    \"clinvar.gene.id\"\n  ],\n  \"Drug\": [\n    \"cgi.drug\",\n    \"cgi[].drug\",\n    \"civic.evidence_items[].drugs[].name\",\n    \"civic.evidence_items.drugs[].name\"\n  ],\n  \"Disease\": [\n    \"civic.evidence_items.disease.display_name\",\n    \"civic.evidence_items[].disease.display_name\",\n    \"clinvar.rcv.conditions.name\",\n    \"clinvar.rcv[].conditions.name\",\n    \"clinvar.rcv[].conditions[].name\",\n    \"clinvar.rcv.conditions[].name\"\n  ],\n  \"Description\": [\n    \"civic.description\"\n  ],\n  \"Somatic\": [\n    \"civic.evidence_items[0].variant_origin\",\n    \"clinvar.rcv.origin\"\n  ],\n  \"ChromosomePos\": [\n    \"chrom\"\n  ],\n  \"StartPos\": [\n    \"vcf.position\",\n    \"hg19.start\"\n  ],\n  \"EndPos\": [\n    \"vcf.position\",\n    \"hg19.end\"\n  ],\n  \"VariantTypes\": [\n    \"civic.variant_types.display_name\",\n    \"civic.variant_types[].display_name\"\n  ],\n  \"HGVSID\": [\n    \"_id\"\n  ],\n  \"ClinicalSignificance\": [\n    \"clinvar.rcv\", // Cool my script even works for sub JSON objects :)\n    \"clinvar.rcv[]\"\n  ]\n};\n\n// Can\"t be declared inside class for some reason.\nconst enum KeywordPurpose {\n  Gene_HUGO_Symbol,\n  Variant_Name,\n  HGVS_ID,\n  ENTREZ_ID\n}\n\n// Stores the keyword string and the purpose enum.\nclass VariantSearchKeyword {\n  constructor (_keyword: string, _purpose: KeywordPurpose) {\n    this.keyword = _keyword;\n    this.purpose = _purpose;\n  }\n\n  public keyword: string;\n  public purpose: KeywordPurpose;\n}\n\n@Injectable()\nexport class MyVariantInfoSearchService implements IVariantDatabase {\n  constructor(private http: HttpClient, private jsonNavigator: JSONNavigatorService)\n  {\n    // Scrub the locations of all bracket indicators.\n    for (const key of Object.keys(MY_VARIANT_LOCATIONS))\n    {\n      const compilation: string[] = [];\n      for (let i = 0; i < MY_VARIANT_LOCATIONS[key].length; i++)\n      {\n        const currentFocus = MY_VARIANT_LOCATIONS[key][i];\n        if (currentFocus.indexOf(\"[\") >= 0)\n        {\n\n          // REGULAR EXPRESSIONS AHHHHH (test here: http://regexr.com/)\n          const scrubbedString = currentFocus.replace(/\\[.*?\\]/g, \"\");\n\n          console.log(\"Scrubbed \" + currentFocus + \" to \" + scrubbedString);\n          compilation.push(scrubbedString);\n        } else\n        {\n          compilation.push(currentFocus);\n        }\n      }\n      this.scrubbedLocations[key] = compilation;\n    }\n\n    // Add all values of the MY_VARIANT_LOCATIONS array to the include string.\n    for (const key of Object.keys(this.scrubbedLocations)) {\n      for (const location of this.scrubbedLocations[key]) {\n        this.allFieldsIncludeString = this.allFieldsIncludeString + location + \",\";\n      }\n    }\n    // Remove the final comma.\n    this.allFieldsIncludeString = this.allFieldsIncludeString.substring(0, this.allFieldsIncludeString.length - 1);\n\n    // Add fields required for references to reference include string.\n    for (const key of [\"GeneHUGO\", \"VariantName\", \"EntrezID\"])\n      for (const location of this.scrubbedLocations[key])\n        this.referenceFieldsIncludeString = this.referenceFieldsIncludeString + location + \",\";\n    // Remove the final comma.\n    this.referenceFieldsIncludeString = this.referenceFieldsIncludeString.substring(0, this.allFieldsIncludeString.length - 1);\n  }\n\n  // Create these in the constructor so that we don\"t constantly re-create them.\n  allFieldsIncludeString: string = \"\";\n  referenceFieldsIncludeString: string = \"\";\n\n  scrubbedLocations: any = {};\n  queryEndpoint: string = \"https://myvariant.info/v1/query?q=\";\n  currentKeywords: VariantSearchKeyword[] = [];\n  lastSuggestionSet: Observable<VariantReference[]> = Observable.of<VariantReference[]>([]);\n\n  /**\n   * Utility method to query in accordance with myvariant.info API.\n   * @param {string[]} stringArray\n   * @param {string} desiredVal\n   * @returns {string}\n   */\n  public constructORConcatenation(stringArray: string[], desiredVal: string, include_prefixed_args: boolean): string {\n    desiredVal = desiredVal.replace(/[:]/g, \"\\\\$&\");\n    // desiredVal = encodeURIComponent(desiredVal);\n    let currentString = \"\";\n    if (include_prefixed_args) \n    {\n      currentString = stringArray[0] + \":\" + desiredVal + \"*\" + \"%20OR%20\" + stringArray[0] + \":\" + desiredVal;\n    }\n    else\n    {\n      currentString = stringArray[0] + \":\" + desiredVal;\n    }\n\n    for (let i = 1; i < stringArray.length; i++) {\n      if (include_prefixed_args) {\n        currentString = currentString + \"%20OR%20\" + stringArray[i] + \":\" + desiredVal + \"*\";\n      }\n      currentString = currentString + \"%20OR%20\" + stringArray[i] + \":\" + desiredVal;\n    }\n    return currentString;\n  }\n\n  /**\n   * Works as follows:\n   * 1. The keyword is dissected (split by spaces), and then test queries are sent to figure out the likely purpose of each\n   * keyword (3 chars required before any predictions made).\n   * 2. Based on the likelihood of each of the words made previously, a list of variants are compiled and sent back to the\n   * filterable search component, where the user selects one from the list.\n   * @param {string} searchTerm\n   * @returns {Observable<Variant[]>}\n   */\n  public searchByString = (searchTerm: string): Observable<VariantReference[]> => {\n    // Get new keywords.\n    const newKeywords: string[] = searchTerm.split(\" \");\n\n    // Prune out keywords which are less than 3 characters.\n    for (let i = 0; i < newKeywords.length; i++) {\n      if (newKeywords[i].length < 1) {\n        newKeywords.splice(i, 1);\n      }\n    }\n\n    /**\n     * Figure out conflicts.  This is done by looking through the keyword array for each keyword object.\n     * If it is found, then the item is removed from the new keywords array.  Otherwise, the keyword is\n     * removed from the current keywords array.\n     */\n    const managePotentialConflict = (potentialConflict: VariantSearchKeyword) => {\n      // Figure out conflicting keywords.\n      for (const newKeyword of newKeywords) {\n        if (newKeyword === potentialConflict.keyword) {\n          // Remove the potential conflict and its corresponding keyword.\n          newKeywords.splice(newKeywords.indexOf(potentialConflict.keyword), 1);\n          return;\n        }\n      }\n\n      // It must\"ve not been found if we reach here.\n      this.currentKeywords.splice(this.currentKeywords.indexOf(potentialConflict), 1);\n      console.log(potentialConflict.keyword + \" is a conflict.\");\n    };\n    for (const potentialConflict of this.currentKeywords) {\n      // Wrapped in a method so that we can return if need be.\n      managePotentialConflict(potentialConflict);\n    }\n\n    if (newKeywords.length === 0) {\n      console.log(\"Returning last suggestion set\", this.lastSuggestionSet);\n      return this.lastSuggestionSet;\n    }\n\n    // Gets populated, forked, and then mapped.\n    const checkObservables: Observable <void>[] = [];\n\n    // Now the array only has the conflict keywords, so we can classify the purposes of the other keywords.\n    for (const newKeyword of newKeywords) {\n      // Since all checks follow same format.\n      const determineLikelihoodBasedOnQuery = (queryString: string): Observable <number> => {\n        return this.http.get(queryString)\n          .map(result => {\n            return result[\"hits\"].length;\n          });\n      };\n\n      const quickQuerySuffix = \"&fields=_id&size=15\";\n\n      // Don\"t create duplicate purposes.\n      const purposeAlreadyExists = (purpose: KeywordPurpose): boolean => {\n        for (const keyword of this.currentKeywords) {\n          if (keyword.purpose === purpose) {\n            return true;\n          }\n        }\n        return false;\n      };\n\n      // Query for relative likelihoods.\n      if (!isNaN(Number(newKeyword)))\n      {\n        if (!purposeAlreadyExists(KeywordPurpose.ENTREZ_ID))\n          this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.ENTREZ_ID));\n      }\n      else if (newKeyword.toLowerCase().indexOf(\"chr\") >= 0 || newKeyword.toLowerCase().indexOf(\"civic\") >= 0)\n      {\n        if (!purposeAlreadyExists(KeywordPurpose.HGVS_ID))\n          this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.HGVS_ID));\n      }\n      else\n      {\n        const geneHUGOQuery = determineLikelihoodBasedOnQuery(this.queryEndpoint + this.constructORConcatenation(this.scrubbedLocations.GeneHUGO, newKeyword, true) + quickQuerySuffix);\n        const variantNameQuery = determineLikelihoodBasedOnQuery(this.queryEndpoint + this.constructORConcatenation(this.scrubbedLocations.VariantName, newKeyword, true) + quickQuerySuffix);\n\n        // Create large observable fork.\n        checkObservables.push(\n          Observable.forkJoin([geneHUGOQuery, variantNameQuery])\n            .map((results: number[]) => {\n              console.log(\"Classification results were \", results);\n\n              // Figure out purpose of keyword.\n              if (results[0] > results[1])\n              {\n\n                if (!purposeAlreadyExists(KeywordPurpose.Gene_HUGO_Symbol))\n                  this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.Gene_HUGO_Symbol));\n\n              }\n              else if (results[0] < results[1])\n              {\n\n                if (!purposeAlreadyExists(KeywordPurpose.Variant_Name))\n                  this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.Variant_Name));\n\n              }\n              else\n              {\n                // Results must be equal.\n                if (!purposeAlreadyExists(KeywordPurpose.Gene_HUGO_Symbol))\n                  this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.Gene_HUGO_Symbol));\n\n                else if (!purposeAlreadyExists(KeywordPurpose.Variant_Name))\n                  this.currentKeywords.push(new VariantSearchKeyword(newKeyword, KeywordPurpose.Variant_Name));\n\n              }\n            }));\n      }\n    }\n\n    const getVariantArrayObservable = (): Observable<VariantReference[]> => {\n      console.log(\"Creating final observable with keywords\", this.currentKeywords);\n      // Apply keywords to query.\n      let finalQuery = this.queryEndpoint;\n      let arrayToUse: string[];\n      if (this.currentKeywords.length > 1) {\n        finalQuery = finalQuery + \"(\";\n      }\n      for (let i = 0; i < this.currentKeywords.length; i++) {\n        switch (this.currentKeywords[i].purpose) {\n          case KeywordPurpose.Gene_HUGO_Symbol:\n            arrayToUse = this.scrubbedLocations.GeneHUGO;\n            break;\n          case KeywordPurpose.Variant_Name:\n            arrayToUse = this.scrubbedLocations.VariantName;\n            break;\n          case KeywordPurpose.HGVS_ID:\n            arrayToUse = this.scrubbedLocations.HGVSID;\n            break;\n          case KeywordPurpose.ENTREZ_ID:\n            arrayToUse = this.scrubbedLocations.EntrezID;\n        }\n\n        finalQuery = finalQuery + this.constructORConcatenation(arrayToUse, this.currentKeywords[i].keyword, true);\n\n        // Add \"AND\" requirement\n        if (i < this.currentKeywords.length - 1) {\n          finalQuery = finalQuery + \")%20AND%20(\";\n        }\n      }\n      if (this.currentKeywords.length > 1) {\n        finalQuery = finalQuery + \")\";\n      }\n\n      // Add suffix.\n      finalQuery = finalQuery + \"&fields=\" + this.referenceFieldsIncludeString + \"&size=15\";\n\n      return this.http.get(finalQuery)\n        .map(result => {\n          console.log(\"Final Query result from \" + finalQuery, result);\n          if (!result[\"hits\"])\n            return [];\n\n          // Used to check whether a given property exists in the mapped JSON.\n          const variantResults: VariantReference[] = [];\n\n          // For every result.\n          for (const hit of result[\"hits\"]) {\n            // Since names, HUGO symbols, and such shouldn\"t include spaces.\n            const ensureValidString = (someString: string): string => {\n              return someString.indexOf(\" \") >= 0 ? someString.substring(0, someString.indexOf(\" \")) : someString;\n            };\n\n            // Gene construction.\n            const variantGene = new GeneReference(ensureValidString(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.GeneHUGO, false)[0]), Number(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.EntrezID, false)[0]));\n\n            // Variant construction\n            variantResults.push(new VariantReference(variantGene, ensureValidString(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.VariantName, false)[0]), hit._id));\n          }\n\n          return variantResults;\n        });\n    };\n\n    if (checkObservables.length > 0) {\n      // Map the keywords (has to be done this way based on how Observables work).\n      return Observable.forkJoin(checkObservables)\n      // Merge map so that we wait for the forked observable to complete.\n        .mergeMap((results: void[]) => {\n          this.lastSuggestionSet = getVariantArrayObservable();\n          return this.lastSuggestionSet;\n        });\n    } else { // If this is an entrez ID or an HGVS ID based on special circumstances.\n      this.lastSuggestionSet = getVariantArrayObservable();\n      return this.lastSuggestionSet;\n    }\n  };\n\n  getByReference = (reference: VariantReference): Observable<Variant> => {\n    console.log(\"Creating final observable with keywords\", this.currentKeywords);\n\n    // Apply key fields to query.\n    let queryConstruct = this.queryEndpoint;\n    let alreadyAdded = 0;\n    const addORConstructToQuery = (orConstruct: string) => {\n      if (alreadyAdded > 0) {\n        queryConstruct = queryConstruct + \"%20OR%20(\";\n      } else {\n        queryConstruct = queryConstruct + \"(\";\n      }\n      queryConstruct = queryConstruct + orConstruct + \")\";\n      alreadyAdded++;\n    };\n    if (reference.origin) {\n      if (reference.origin.hugoSymbol && reference.origin.hugoSymbol !== \"\") {\n        addORConstructToQuery(this.constructORConcatenation(this.scrubbedLocations.GeneHUGO, reference.origin.hugoSymbol, true));\n      }\n      if (reference.origin.entrezID && reference.origin.entrezID !== -1) {\n        addORConstructToQuery(this.constructORConcatenation(this.scrubbedLocations.EntrezID, reference.origin.entrezID.toString(), false));\n      }\n    }\n\n    if (reference.hgvsID && reference.hgvsID !== \"\") {\n      addORConstructToQuery(this.constructORConcatenation(this.scrubbedLocations.HGVSID, reference.hgvsID, false));\n    }\n    if (reference.variantName && reference.variantName !== \"\") {\n      addORConstructToQuery(this.constructORConcatenation(this.scrubbedLocations.VariantName, reference.variantName, true));\n    }\n    // Add suffix.\n    queryConstruct = queryConstruct + \"&fields=\" + this.allFieldsIncludeString + \"&size=15\";\n\n    return this.http.get(queryConstruct)\n      .map(result => {\n        console.log(\"Final Query result from \" + queryConstruct, result);\n        if (!result[\"hits\"])\n          return null;\n\n        // For every result.\n        if (!(result[\"hits\"] && result[\"hits\"].length > 0))\n          return null;\n\n        const hit = result[\"hits\"][0];\n\n        // Since names, HUGO symbols, and such shouldn\"t include spaces.\n        const ensureValidString = (someString: string): string => {\n          return someString.indexOf(\" \") >= 0 ? someString.substring(0, someString.indexOf(\" \")) : someString;\n        };\n\n        // Gene construction.\n        console.log(\"Constructing from reference \" + reference.toString())\n        const newVariant: Variant = Variant.fromReference(reference);\n\n        newVariant.description = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.Description, false)[0];\n        newVariant.score = hit._score;\n        newVariant.somatic = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.Somatic, false)[0].toLowerCase().indexOf(\"somatic\") >= 0;\n        newVariant.chromosome = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.ChromosomePos, false)[0]; // Can be \"X\" or \"Y\"\n        newVariant.start = Number(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.StartPos, false)[0]);\n        newVariant.end = Number(this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.EndPos, false)[0]);\n\n        newVariant.drugs = [];\n        for (const drugName of this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.Drug, true)) {\n          newVariant.drugs.push(new DrugReference(drugName));\n        }\n\n        newVariant.types = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.VariantTypes, true);\n        newVariant.diseases = this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.Disease, true);\n\n        newVariant.classifications = [];\n        const addClassification = (classification: Classification) => {\n          for (const existentC of newVariant.classifications) {\n            if (existentC.name === classification.name) {\n              existentC.sources.push(classification.sources[0]);\n              return;\n            }\n          }\n          newVariant.classifications.push(classification);\n        };\n        for (const classification of this.jsonNavigator.mergePathsData(hit, MY_VARIANT_LOCATIONS.ClinicalSignificance, true)) {\n          addClassification(new Classification(classification.clinical_significance, \"ClinVar RCV Accession \" + classification.accession));\n        }\n\n        return newVariant;\n      });\n  }\n}\n","/**\n * TODO: This class should eventually take over for the myvariant.info querier's JSON searching, since that service should be\n * leverageable by all services which require it.\n */\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class JSONNavigatorService {\n  /**\n   * Navigates through a simple path \"item.test.name\", NOT \"item.test[].name\"\n   * @param from  the JSON to search through.\n   * @param {string} path  the path of the item in question.\n   * @returns {any}  the sub JSON at that path.\n   */\n  navigateToPath(from: any, path: string): any {\n    let current = from;\n    for (const key of path.split(\".\")) {\n      if (current instanceof Array) {\n        return null;\n      }\n      if (!current.hasOwnProperty(key)) {\n        return null;\n      }\n      current = current[key];\n    }\n    return current;\n  }\n\n  /**\n   * Takes a path which may contain bracket notation and recursively parses it to a string or a string array (depending\n   * on the data available at that path).\n   * @param from\n   * @param {string} path\n   * @returns {string | string[]}\n   */\n  getPathData(from: any, path: string): any | any[] {\n    // Figure out whether the user added any [] in.\n    if (path.indexOf(\"[\") >= 0 && path.indexOf(\"]\") >= 0) {\n      // Figure out the array stuff.\n      const prePath = path.substring(0, path.indexOf(\"[\"));\n      // Navigate to prePath.\n      const current = this.navigateToPath(from, prePath);\n\n      if (!(current instanceof Array)) {\n        return null;\n      }\n\n      // Post path.\n      let index = Number(path[path.indexOf(\"[\") + 1]);\n      if (isNaN(index)) {\n        index = -1;\n      }\n      const postPath = path.substring(path.indexOf(\"]\") + 2);\n\n      // User wrote civic.evidence_items[] not [0]\n      if (index === -1) { // Will return array\n        let compilation: string[] = [];\n        for (const subJSON of current) {\n          // Recursive call (in case more [] are included)\n          const subJSONValue = this.navigateToPath(subJSON, postPath);\n          if (subJSONValue === null) {\n            return null;\n          }\n\n          if (subJSONValue instanceof Array) {\n            for (const subJSONArrayValue of subJSONValue) {\n              compilation.push(subJSONArrayValue);\n            }\n          } else {\n            compilation.push(subJSONValue);\n          }\n        }\n        compilation = compilation.filter(function (filterItem) {\n          return filterItem !== null && filterItem !== \"\";\n        });\n        return compilation;\n      } else {\n        return this.getPathData(current[index], postPath);\n      }\n    } else {\n      return this.navigateToPath(from, path);\n    }\n  }\n\n  /**\n   * Calls getPathData on a bunch of paths and merges the resulting data.\n   */\n  mergePathsData(from: any, paths: string[], searchAll: boolean): any[] {\n    let compilation: string[] = [];\n    for (const potentialHeader of paths) {\n      const potentialValue = this.getPathData(from, potentialHeader);\n      if (potentialValue !== null) {\n        if (potentialValue instanceof Array) {\n          for (const subValue of potentialValue) {\n            compilation.push(subValue);\n          }\n        } else {\n          compilation.push(potentialValue);\n        }\n        if (!searchAll) {\n          break;\n        }\n      }\n    }\n\n    // Don\"t search for duplicates if there\"s only one value!\n    if (searchAll) {\n      // Remove duplicates from array (thanks StackOverflow!)\n      compilation = compilation.reduce(function(p, c, i, a){\n        if (p.indexOf(c) === -1) {\n          p.push(c);\n        } else {\n          p.push(\"\");\n        }\n        return p;\n      }, []);\n      // Remove all empty strings from array.\n      compilation = compilation.filter(function (filterItem) {\n        return filterItem !== \"\";\n      });\n    }\n\n    if (compilation.length === 0 && !searchAll) {\n      compilation.push(\"\"); // Empty string so that errors aren\"t thrown.\n    }\n\n    return compilation;\n  }\n}\n","import { IFilterableSearchOption } from \"./filterable-search/filterable-search.component\";\nimport { IMergeable, MergeProperties } from \"./data-merging\";\nimport { DrugReference } from \"./variant-visualization/drugs/drug\";\nimport {Injectable} from \"@angular/core\";\n\n/**\n * The gene reference class includes only the base properties for a given gene; those which are required for merging\n * and such.\n */\nexport class GeneReference implements IMergeable\n{\n  constructor (_hugoSymbol: string, _entrezID: number)\n  {\n    this.hugoSymbol = _hugoSymbol;\n    this.entrezID = _entrezID;\n  }\n  hugoSymbol: string;\n  entrezID: number;\n\n  // Merges another gene into this gene (overwriting properties if the property of one is undefined).\n  mergeable = (other: GeneReference) =>\n  {\n    if (!this.hugoSymbol || this.hugoSymbol === \"\")\n      return false;\n\n    return this.hugoSymbol === other.hugoSymbol;\n  }\n\n  merge = (other: GeneReference) =>\n  {\n    this.entrezID = MergeProperties(this.entrezID, other.entrezID);\n  }\n\n  toString = (): string => {\n    return this.hugoSymbol + \" \" + this.entrezID;\n  }\n}\n\n/**\n * The gene class provides a quick and easy way to obtain gene names, various IDs, and so on from a\n * variety of databases.  Eventually this class will be made FHIR compliant to speed up FHIR bundle\n * conversion.\n */\nexport class Pathway {\n  constructor (_id: string, _name: string) {\n    this.id = _id;\n    this.name = _name;\n  }\n  id: string;\n  name: string;\n}\n\n/**\n * Contains additional data than the GeneReference.\n */\nexport class Gene\n{\n  static fromReference(reference: GeneReference)\n  {\n    const newGene = new Gene(reference.hugoSymbol);\n    newGene.entrezID = reference.entrezID;\n    return newGene;\n  }\n\n  constructor(_hugoSymbol: string)\n  {\n    this.hugoSymbol = _hugoSymbol;\n  }\n\n  // Class properties\n  hugoSymbol: string;\n  entrezID: number;\n  name: string;\n  description: string;\n  type: string;\n  aliases: string[];\n  pathways: Pathway[] = [];\n  chromosome: string;\n  start: number;\n  end: number;\n  strand: number;\n\n  /**\n   * Concatenates all genomic pathways for the variant in question.\n   * @returns {string}\n   */\n  pathwaysString = (): string =>\n  {\n    if (!this.pathways || this.pathways.length === 0)\n      return \"\";\n\n    let current = \"The \" + this.pathways[0].name;\n    for (let i = 1; i < this.pathways.length; i++) {\n      if (i < this.pathways.length - 1) {\n        current = current + \", the \" + this.pathways[i].name;\n      } else {\n        current = current + \", and the \" + this.pathways[i].name;\n      }\n    }\n    return current;\n  }\n\n  // Merges another gene into this gene (overwriting properties if the property of one is undefined).\n  mergeable = (other: Gene) =>\n  {\n    if (!this.hugoSymbol || this.hugoSymbol === \"\")\n      return false;\n\n    return this.hugoSymbol === other.hugoSymbol;\n  }\n\n  merge = (other: Gene) =>\n  {\n    this.entrezID = MergeProperties(this.entrezID, other.entrezID);\n    this.name = MergeProperties(this.name, other.name);\n    this.description = MergeProperties(this.description, other.description);\n    this.type = MergeProperties(this.type, other.type);\n    this.aliases = MergeProperties(this.aliases, other.aliases);\n  }\n}\n\n/**\n * The variant reference is better way to get only the basic info required for a given variant.\n */\nexport class VariantReference implements IFilterableSearchOption, IMergeable\n{\n  constructor(_origin: GeneReference, _variantName: string, _hgvsID: string)\n  {\n    this.origin = _origin;\n    this.variantName = _variantName;\n    this.hgvsID = _hgvsID;\n  }\n  origin: GeneReference;\n  variantName: string;\n  hgvsID: string;\n\n  optionName = () =>\n  {\n    return this.origin.hugoSymbol + \" \" + this.variantName + \" \" + this.origin.entrezID + \" \" + this.hgvsID;\n  }\n\n  /**\n   * Merging methods\n   */\n  mergeable = (other: VariantReference) =>\n  {\n    return this.variantName === other.variantName && this.origin.mergeable(other.origin);\n  }\n\n  // Merges another variant reference into this variant reference (overwriting properties if the property of one is undefined).\n  merge = (other: VariantReference) =>\n  {\n    // Determine which HGVS ID to use since we don't want to mess this one up.\n    if (other.hgvsID.indexOf(\"chr\") !== -1)\n      this.hgvsID = other.hgvsID;\n    else if (this.hgvsID.indexOf(\"chr\") !== -1)\n      other.hgvsID = this.hgvsID;\n\n    // Merge both genes.\n    this.origin.merge(other.origin);\n\n    console.log(\"Merged \" + this.toString() + \" and \" + other.toString());\n  }\n\n  toString = (): string =>\n  {\n    return this.origin.toString() + \" \" + this.variantName + \" \" + this.hgvsID;\n  }\n}\n\n/**\n * Gene variants vary in their pathogenicity (danger to their host), and are important to consider\n * alongside the genes which they vary from.\n */\nexport class Classification\n{\n  constructor (_name: string, _source: string)\n  {\n    this.name = _name;\n    this.sources = [_source];\n  }\n  name: string;\n  sources: string[];\n}\n\n/**\n * Contains the data required to display a variant.\n */\nexport class Variant\n{\n  static fromReference(reference: VariantReference)\n  {\n    return new Variant(Gene.fromReference(reference.origin), reference.variantName, reference.hgvsID);\n  }\n\n  constructor(_origin: Gene, _variantName: string, _hgvsID: string)\n  {\n    this.origin = _origin;\n    this.variantName = _variantName;\n    this.hgvsID = _hgvsID;\n  }\n\n  origin: Gene;\n  variantName: string;\n  hgvsID: string;\n  score: number = 0;\n  description: string;\n  somatic: boolean;\n  types: string[];\n  drugs: DrugReference[];\n  classifications: Classification[];\n  diseases: string[];\n  chromosome: string; // For potential edge cases when the variant has no associated gene.\n  start: number;\n  end: number;\n\n  optionName = () =>\n  {\n    return this.origin.hugoSymbol + \" \" + this.variantName + \" \" + this.origin.entrezID + \" \" + this.hgvsID;\n  }\n\n  getClassification = () =>\n  {\n    let maxAgreements = 0;\n    let verdict = \"\";\n    for (const classification of this.classifications) {\n      if (maxAgreements < classification.sources.length) {\n        maxAgreements = classification.sources.length;\n        verdict = classification.name;\n      }\n    }\n    return verdict;\n  }\n\n  /**\n   * Merging methods\n   */\n  mergeable = (other: Variant) =>\n  {\n    return this.hgvsID === other.hgvsID && this.origin.mergeable(other.origin);\n  }\n\n  // Merges another variant reference into this variant reference (overwriting properties if the property of one is undefined).\n  merge = (other: Variant) =>\n  {\n    this.origin.merge(other.origin);\n    this.variantName = MergeProperties(this.variantName, other.variantName);\n    this.hgvsID = MergeProperties(this.hgvsID, other.hgvsID);\n    this.score = MergeProperties(this.score, other.score);\n    this.description = MergeProperties(this.description, other.description);\n    this.somatic = MergeProperties(this.somatic, other.somatic);\n    this.types = MergeProperties(this.types, other.types);\n    this.drugs = MergeProperties(this.drugs, other.drugs);\n    this.diseases = MergeProperties(this.drugs, other.drugs);\n  }\n\n  getLocation = () => {\n    return this.start === this.end ? \"Nucleotide \" + this.start : \"Nucleotides \" + this.start + \" to \" + this.end;\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Variant } from \"./genomic-data\";\nimport { SMARTClient } from \"../../smart-initialization/smart-reference.service\";\nimport { VariantSelectorService } from \"./variant-selector/variant-selector.service\";\nimport { trigger, state, style, animate, transition } from \"@angular/animations\";\nimport {Router} from \"@angular/router\";\nimport {FeedbackFormModalComponent} from \"../feedback-form/feedback-form-modal.component\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {isNullOrUndefined} from \"util\";\n\nclass VariantWrapper {\n  constructor(_index: number, _variant: Variant) {\n    this.index = _index;\n    this.variant = _variant;\n    this.drawerState = \"closed\";\n    this.saved = false;\n  }\n\n  variant: Variant;\n  index: number;\n  drawerState: string; // Open or closed.\n  saved: boolean;\n\n  public toggleDrawer = () => {\n    this.drawerState = this.drawerState === \"closed\" ? \"open\" : \"closed\";\n  }\n}\n\n@Component({\n  selector: \"variant-entry-and-visualization\",\n  template: `\n    <div id=\"patientLinkState\">\n      <!-- If an EHR link is NOT detected -->\n      <div id=\"suggestEHRLink\" *ngIf=\"offerToLinkToEHRInstructions\">\n        <div id=\"suggestions\">\n          <img src=\"/assets/entry-and-visualization/info-icon.png\">\n          <p class=\"thick\" style=\"color:#fff\">SMART Cancer Navigator is not connected to an EHR. <a style=\"color:#891924\" href=\"javascript:void(0)\" (click)=\"routeToInstructions()\">Learn how to connect.</a></p>\n        </div>\n        <button class=\"btn btn-danger\" (click)=\"offerToLinkToEHRInstructions = false\"><div style=\"margin-top:-3px; margin-right:-2px\">&times;</div></button>\n      </div>\n\n      <!-- If an EHR link is detected -->\n      <div id=\"patientInfo\" *ngIf=\"patientExists\" [style.background-color]=\"patientObject['gender'] === 'male' ? '#27384f' : '#ff45f7'\">\n        <img [src]=\"patientObject['gender'] === 'male' ? '/assets/entry-and-visualization/male-icon.png' : '/assets/entry-and-visualization/female-icon.png'\">\n\n        <!-- Patient Details -->\n        <p style=\"color: white\">\n          <b>Name: </b> {{patientObject['name'][0].given[0]}} {{patientObject['name'][0].family}} | \n          <b>{{patientObject['active'] ? 'Lives in' : 'Lived in'}}:</b> {{patientObject['address'][0].country}} | <b>Age:</b> {{patientAge}} | \n          <b>Condition:</b> \n          <select style=\"font-size: 15px;\">\n            <option *ngFor=\"let condition of patientConditions\">{{condition}}</option>\n          </select>\n        </p>\n\n        <div id=\"autosyncToggle\">\n          <div>\n            <ui-switch [ngModel]=\"autosync\" (ngModelChange)=\"onToggleAutosync($event)\"></ui-switch>\n            <p class=\"thick\" style=\"color: white\">Auto-Sync</p>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div id=\"variantVisualizations\">\n      <div class=\"variantWrapper\" *ngFor=\"let variant of variants; let i = index\">\n        <div class=\"variantSelector\">\n          <div [style.width]=\"i === variants.length - 1 ? '100%' : 'calc(100% - 38px)'\">\n            <variant-selector [ngModel]=\"variant.variant\"\n                              (ngModelChange)=\"variant.variant = $event; addRowMaybe(i); saveEHRVariant(variant);\"></variant-selector>\n          </div>\n          <button style=\"font-size:200%\" class=\"removeRowButton btn btn-danger\" (click)=\"removeRow(i)\" *ngIf=\"i !== variants.length - 1\"><div style=\"margin-top:-8px; margin-right:-2px;\">&times;</div>\n          </button>\n        </div>\n        <div>\n          <div class=\"visualizationContent\" [@drawerAnimation]=\"variant.drawerState\">\n            <variant-visualization [(ngModel)]=\"variant.variant\"></variant-visualization>\n          </div>\n          <div *ngIf=\"variant.variant !== undefined && variant.variant !== null\" class=\"informationToggle\"\n               (click)=\"variant.toggleDrawer()\">\n            <img src=\"/assets/entry-and-visualization/dropdown.svg\">\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Review form question -->\n    <div id=\"askForReviewDiv\" *ngIf=\"userInteractionPoints >= 3 && askForReview\">\n      <a href=\"javascript:void(0)\" (click)=\"openFeedbackForm()\">\n        <ngb-alert [type]=\"'primary'\" (close)=\"askForReview = false\">Please review our service!</ngb-alert>\n      </a>\n    </div>\n  `,\n  styles: [`\n    p {\n      margin: 0;\n    }\n\n    #patientLinkState {\n      margin-left: 6%;\n      margin-right: 6%;\n    }\n\n    #suggestEHRLink {\n      height: 80px;\n      width: 100%;\n\n      background-color: #dc3545;\n      overflow: hidden;\n    }\n\n    #suggestEHRLink > * {\n      float: left;\n    }\n\n    #suggestEHRLink > #suggestions {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      width: calc(100% - 60px);\n      height: 100%;\n    }\n\n    #suggestEHRLink img {\n      width: 60px;\n      height: 60px;\n      margin: 1% 10px;\n    }\n\n    #suggestEHRLink p {\n      width: calc(96% - 80px);\n      margin: 1%;\n      font-size: 20px;\n      color: black;\n    }\n\n    #suggestEHRLink button {\n      width: 30px;\n      height: 30px;\n      color: white;\n      font-size: 130%;\n      border-radius: 0px 0px 0px 10px;\n      padding: 0;\n      float: right;\n    }\n\n    #patientLinkState > div {\n      border-bottom-left-radius: 30px;\n      border-bottom-right-radius: 30px;\n    }\n\n    #patientInfo {\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      height: 80px;\n      width: 100%;\n\n      overflow: hidden;\n\n      text-align: center;\n    }\n\n    #patientInfo img {\n      width: 60px;\n      height: 60px;\n      margin: 10px;\n    }\n\n    #patientInfo p {\n      width: calc(96% - 280px);\n      margin: 1%;\n      font-size: 20px;\n      color: black;\n    }\n    \n    #autosyncToggle {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      width: 200px;\n      height: 100%;\n    }\n\n    #autosyncToggle > div {\n      width: 100%;\n    }\n\n    #autosyncToggle > div > p {\n      width: 100%;\n    }\n\n    #variantVisualizations {\n      padding: 15px;\n      margin-top: 2%;\n      margin-left: 4%;\n      margin-right: 4%;\n      background-color: white;\n    }\n\n    .variantWrapper {\n      margin-bottom: 5px;\n    }\n\n    .variantSelector {\n      height: 38px;\n    }\n\n    .variantSelector > * {\n      float: left;\n      height: 100%;\n    }\n\n    .removeRowButton {\n      width: 38px;\n      font-size: 20px;\n      color: white;\n      padding: 0;\n    }\n\n    .informationToggle {\n      width: 100%;\n      background-color: #e2e2e2;\n      border-bottom-left-radius: 10px;\n      border-bottom-right-radius: 10px;\n      text-align: center;\n      height: 30px;\n    }\n\n    .visualizationContent {\n      overflow: scroll;\n    }\n\n    .informationToggle:hover {\n      background-color: #b2b2b2;\n    }\n\n    .informationToggle img {\n      height: 10px;\n      width: 10px;\n      margin: 10px;\n    }\n\n    #askForReviewDiv {\n      display: block;\n      position: fixed;\n      bottom: 0;\n      left: 0;\n    }\n  `],\n  animations: [\n    trigger(\"drawerAnimation\", [\n      state(\"closed\", style({\n        height: \"0\"\n      })),\n      state(\"open\", style({\n        height: \"700px\"\n      })),\n      transition(\"closed => open\", animate(\"400ms ease-in-out\")),\n      transition(\"open => closed\", animate(\"400ms ease-in-out\"))\n    ])\n  ]\n})\nexport class VariantEntryAndVisualizationComponent implements OnInit {\n  constructor (private selectorService: VariantSelectorService, private router: Router, private modalService: NgbModal) {}\n\n  // This is what we're using to determine whether the user is worthy to rate our service (has interacted enough with the service).\n  userInteractionPoints: number = 0;\n  askForReview: boolean = true;\n\n  variants: VariantWrapper[] = [];\n\n  offerToLinkToEHRInstructions = true;\n  patientExists = false;\n  patientObject: Object = null;\n  patientAge: number = -1;\n  patientConditions: string[] = [];\n\n  // Toggled by the user depending on whether they want to sync to the EHR their changes right away (as soon as they make them)\n  autosync: boolean = true;\n\n  ngOnInit()\n  {\n    this.addRow();\n\n    // As soon as the smart client is loaded from the SMART JS library, this creates the patient info header and populates the patient variants.\n    SMARTClient.subscribe(smartClient => {\n      if (smartClient === null) {\n        return;\n      }\n\n      this.offerToLinkToEHRInstructions = false;\n\n      // Get all patient information.\n      smartClient.patient.read().then(p => {\n        console.log(\"Patient read is \", p);\n        this.patientObject = p;\n        if (p.birthDate && p.active) {\n          const birthDateValues = p.birthDate.split(\"-\");\n          const timeDiff = Math.abs(Date.now() - new Date(parseInt(birthDateValues[0]), parseInt(birthDateValues[1]), parseInt(birthDateValues[2])).getTime());\n          // Used Math.floor instead of Math.ceil so 26 years and 140 days would be considered as 26, not 27.\n          this.patientAge = Math.floor((timeDiff / (1000 * 3600 * 24)) / 365);\n        }\n        this.patientExists = true;\n      });\n\n      // Get all genomic variants attached to this patient.\n      smartClient.patient.api.search({type: \"Observation\", query: {\"category\": \"genomic-variant\"}, count: 10})\n        .then(results => {\n          console.log(\"Successfully got variants!\", results);\n\n          if (!results.data.entry) {\n            return;\n          }\n\n          if (results.data.entry.length > 0) {\n            this.removeRow(0); // Start at the first index if we find other variants.\n          }\n\n          // For every variant.\n          let resultIndex = 0;\n          for (const result of results.data.entry) {\n            console.log(\"Will now add \" + result.resource.code.text);\n            this.selectorService.search(result.resource.code.text).subscribe(variants => {\n              if (variants.length === 0) {\n                console.log(\"NOT GOOD: Couldn't find any search results for \" + result.resource.code.text);\n                return;\n              }\n\n              // Add the first search result to the list (the one with the correct HGVS ID).\n              console.log(\"Adding\", variants[0]);\n\n              this.selectorService.getByReference(variants[0])\n                .subscribe(variant => {\n                  const newWrapper = new VariantWrapper(resultIndex, variant);\n                  if (this.variants.length === resultIndex) {\n                    this.variants.push(newWrapper);\n                  } else {\n                    this.variants[resultIndex] = newWrapper;\n                  }\n                  resultIndex++;\n                });\n            });\n          }\n        })\n        .fail(err => {\n          console.log(\"Couldn't query genomic variants error!\", err);\n        });\n\n      smartClient.patient.api.search({type: \"Condition\"})\n        .then(results => {\n          console.log(\"Got patient conditions:\", results);\n\n          if (!isNullOrUndefined(results.data.entry) && results.data.entry.length > 0) {\n            for (const entry of results.data.entry) {\n              if (!isNullOrUndefined(entry.resource)) {\n                if (!isNullOrUndefined(entry.resource.code)) {\n                  if (!isNullOrUndefined(entry.resource.code.text)) {\n                    this.patientConditions.push(entry.resource.code.text);\n                    console.log(\"Added \" + entry.resource.code.text);\n                  }\n                }\n              }\n            }\n          }\n        })\n        .fail(err => {\n          console.log(\"The query for patient conditions failed!\", err);\n        });\n    });\n  }\n\n  // Row management.\n  addRow() {\n    this.variants.push(new VariantWrapper(this.variants.length, null));\n  }\n  addRowMaybe(indexInQuestion: number) {\n    if (this.variants.length === indexInQuestion + 1) {\n      this.addRow();\n    }\n\n    this.userInteractionPoints++;\n  }\n  removeRow(index: number) {\n    const variantToRemove = this.variants[index].variant;\n\n    this.variants.splice(index, 1);\n\n    for (let i = 0; i < this.variants.length; i++) {\n      this.variants[i].index = i;\n    }\n\n    this.removeEHRVariant(variantToRemove);\n\n    this.userInteractionPoints++;\n  }\n\n  routeToInstructions() {\n    this.router.navigate([\"ehr-link\"]);\n  }\n\n  onToggleAutosync(newVal: boolean) {\n    this.autosync = newVal;\n\n    if (this.autosync) {\n      for (const variant of this.variants) {\n        if (!variant.saved) {\n          this.saveEHRVariant(variant);\n        }\n      }\n    }\n  }\n\n  openFeedbackForm() {\n    this.modalService.open(FeedbackFormModalComponent, {size: \"lg\"});\n    this.askForReview = false;\n  }\n\n  // Remove and save EHR variants.\n  saveEHRVariant(variant: VariantWrapper) {\n    if (!this.autosync) {\n      return;\n    }\n\n    SMARTClient.subscribe(smartClient => {\n      if (smartClient === null) {\n        return;\n      }\n\n      smartClient.patient.read().then((p) => {\n        const dataToTransmit = {\n          \"resource\": {\n            \"resourceType\": \"Observation\",\n            \"id\": \"SMART-Observation-\" + p.identifier[0].value + \"-variation-\" + variant.variant.hgvsID.replace(/[.,\\/#!$%\\^&\\*;:{}<>=\\-_`~()]/g, \"\"),\n            \"meta\": {\n              \"versionId\": \"1\" // ,\n              // \"lastUpdated\": Date.now().toString()\n            },\n            \"text\": {\n              \"status\": \"generated\",\n              \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\">Variation at \" + variant.variant.getLocation() + \"</div>\"\n            },\n            \"status\": \"final\",\n            \"extension\": [\n              {\n                \"url\": \"http://hl7.org/fhir/StructureDefinition/observation-geneticsGene\",\n                \"valueCodeableConcept\": {\n                  \"coding\": [\n                    {\n                      \"system\": \"http://www.genenames.org\",\n                      \"code\": \"12014\",\n                      \"display\": \"TPMT\"\n                    }\n                  ]\n                }\n              }\n            ],\n            \"category\": [\n              {\n                \"coding\": [\n                  {\n                    \"system\": \"http://hl7.org/fhir/observation-category\",\n                    \"code\": \"genomic-variant\",\n                    \"display\": \"Genomic Variant\"\n                  }\n                ],\n                \"text\": \"Genomic Variant\"\n              }\n            ],\n            \"code\": {\n              \"coding\": [\n                {\n                  \"system\": \"http://www.hgvs.org\",\n                  \"code\": variant.variant.hgvsID,\n                  \"display\": variant.variant.hgvsID\n                }\n              ],\n              \"text\": variant.variant.hgvsID\n            },\n            \"subject\": {\n              \"reference\": \"Patient/\" + p.id\n            },\n            // \"effectiveDateTime\": Date.now().toString(),\n            // \"valueQuantity\": {\n            //   \"value\": 41.1,\n            //   \"unit\": \"weeks\",\n            //   \"system\": \"http://unitsofmeasure.org\",\n            //   \"code\": \"wk\"\n            // },\n            // \"context\": {}\n          }\n        };\n\n        console.log(\"Adding variant with\", dataToTransmit);\n        smartClient.api.update(dataToTransmit)\n          .then(result => {\n            console.log(\"Added EHR variant successfully!\", result);\n            variant.saved = true;\n          })\n          .fail(err => {\n            console.log(\"Failed to add EHR variant\", err);\n          });\n      });\n    });\n  }\n  removeEHRVariant(variant: Variant) {\n    if (!this.autosync)\n      return;\n\n    SMARTClient.subscribe(smartClient => {\n      // We can't do anything without a smartClient!\n      if (smartClient === null)\n        return;\n\n      smartClient.patient.read().then((p) => {\n        const dataToTransmit = {\n          \"resource\": {\n            \"resourceType\": \"Observation\",\n            \"id\": \"SMART-Observation-\" + p.identifier[0].value + \"-variation-\" + variant.hgvsID.replace(/[.,\\/#!$%\\^&\\*;:{}<>=\\-_`~()]/g, \"\"),\n            \"meta\": {\n              \"versionId\": \"1\" // ,\n              // \"lastUpdated\": Date.now().toString()\n            },\n            \"text\": {\n              \"status\": \"generated\",\n              \"div\": \"<div xmlns=\\\"http://www.w3.org/1999/xhtml\\\">Variation at \" + variant.getLocation() + \"</div>\"\n            },\n            \"status\": \"final\",\n            \"extension\": [\n              {\n                \"url\": \"http://hl7.org/fhir/StructureDefinition/observation-geneticsGene\",\n                \"valueCodeableConcept\": {\n                  \"coding\": [\n                    {\n                      \"system\": \"http://www.genenames.org\",\n                      \"code\": \"12014\",\n                      \"display\": \"TPMT\"\n                    }\n                  ]\n                }\n              }\n            ],\n            \"category\": [\n              {\n                \"coding\": [\n                  {\n                    \"system\": \"http://hl7.org/fhir/observation-category\",\n                    \"code\": \"genomic-variant\",\n                    \"display\": \"Genomic Variant\"\n                  }\n                ],\n                \"text\": \"Genomic Variant\"\n              }\n            ],\n            \"code\": {\n              \"coding\": [\n                {\n                  \"system\": \"http://www.hgvs.org\",\n                  \"code\": variant.hgvsID,\n                  \"display\": variant.hgvsID\n                }\n              ],\n              \"text\": variant.hgvsID\n            },\n            \"subject\": {\n              \"reference\": \"Patient/\" + p.id\n            },\n            // \"effectiveDateTime\": Date.now().toString(),\n            // \"valueQuantity\": {\n            //   \"value\": 41.1,\n            //   \"unit\": \"weeks\",\n            //   \"system\": \"http://unitsofmeasure.org\",\n            //   \"code\": \"wk\"\n            // },\n            // \"context\": {}\n          }\n        };\n\n        console.log(\"Removing variant with\", dataToTransmit);\n        smartClient.api.delete(dataToTransmit)\n          .then(result => {\n            console.log(\"Removed EHR variant successfully!\", result);\n          })\n          .fail(err => {\n            console.log(\"Failed to remove EHR variant\", err);\n          });\n      });\n    });\n  }\n}\n","/**\n * Data entry is an essential part of the final application that will be built, and it must be built in\n * a way which permits dynamic addition and removal of form elements.  Since Angular makes modularity\n * insanely easy and you can build custom input selectors, this shouldn\"t require too much code.\n */\nimport { Component, forwardRef } from \"@angular/core\";\nimport {GeneReference, Variant, VariantReference} from \"../genomic-data\";\nimport { VariantSelectorService } from \"./variant-selector.service\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nexport const SELECTOR_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => VariantSelectorComponent),\n  multi: true\n};\n\n@Component({\n  selector: \"variant-selector\",\n  template: `\n    <!-- Gene Variation List -->\n    <div>\n      <filterable-search [searchService]=\"selectorService\" [placeholderString]=\"'Add New Variant'\" [ngModel]=\"currentReference\" (ngModelChange)=\"onNewReferenceSelection($event)\"></filterable-search>\n    </div>\n  `,\n  styles: [`\n    div {\n      height: 100%;\n    }\n  `],\n  providers: [SELECTOR_CONTROL_VALUE_ACCESSOR]\n})\nexport class VariantSelectorComponent implements ControlValueAccessor {\n  constructor(public selectorService: VariantSelectorService) {}\n\n  currentReference: VariantReference;\n\n  // The internal data model (for ngModel)\n  _currentlySelected: Variant;\n  get currentlySelected(): Variant {\n    return this._currentlySelected;\n  }\n  set currentlySelected(v: Variant) {\n    if (v !== this.currentlySelected) {\n      this._currentlySelected = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: Variant) {\n    if (value !== this.currentlySelected) {\n      this.currentlySelected = value;\n\n      if (value && value !== null) {\n        this.currentReference = new VariantReference(new GeneReference(this.currentlySelected.origin.hugoSymbol, this.currentlySelected.origin.entrezID), this.currentlySelected.variantName, this.currentlySelected.hgvsID);\n      }\n    }\n  }\n\n  // Placeholders for the callbacks which are later providesd by the Control Value Accessor\n  private onTouchedCallback: () => void = () => {};\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  private onChangeCallback: (_: any) => void = () => {};\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // Update the EHR item (if possible) and change the variant.\n  onNewReferenceSelection(reference: VariantReference) {\n    if (!reference) {\n      return;\n    }\n\n    console.log(\"Would get by reference \", reference);\n    this.currentReference = reference;\n    this.selectorService.getByReference(reference)\n      .subscribe(resultingVariant => this.currentlySelected = resultingVariant);\n  }\n}\n","/**\n * Takes care of querying for variants.\n */\nimport { IFilterableSearchService } from \"../filterable-search/filterable-search.component\";\nimport { Injectable } from \"@angular/core\";\n\n// Genomic data stuff.\nimport { Variant, VariantReference } from \"../genomic-data\";\n\n// Databases.\nimport { MyVariantInfoSearchService } from \"../genomic-data-providers/myvariantinfo-search.service\";\nimport { MyGeneInfoSearchService } from \"../genomic-data-providers/mygeneinfo-search.service\";\n\n// RxJS stuff.\nimport { Observable } from \"rxjs/Observable\";\nimport \"rxjs/add/operator/map\";\nimport \"rxjs/add/observable/forkJoin\";\n\n/**\n * Very simple and straightforward requirements, the database receives the search term and then just hands back the\n * results.\n */\nexport interface IVariantDatabase {\n  searchByString: (searchTerm: string) => Observable<VariantReference[]>;\n  getByReference: (reference: VariantReference) => Observable <Variant>;\n}\n\nexport interface IGeneDatabase {\n  updateVariantOrigin: (variant: Variant) => Observable <Variant>;\n}\n\n@Injectable()\nexport class VariantSelectorService implements IFilterableSearchService {\n  constructor(private myvariantinfoSearchService: MyVariantInfoSearchService, private mygeneinfoSearchService: MyGeneInfoSearchService) {}\n\n  // The databases initialized in the constructor.\n  variantDatabases: IVariantDatabase[] = [this.myvariantinfoSearchService];\n  geneDatabases: IGeneDatabase[] = [this.mygeneinfoSearchService];\n\n  // Merge all variant streams into a single one.\n  public search = (term: string): Observable<VariantReference[]> => {\n    console.log(\"Search \" + term);\n\n    if (term === \"\") {\n      return null;\n    }\n\n    // map them into a array of observables and forkJoin\n    return Observable.forkJoin(this.variantDatabases\n      .map(searchService => searchService.searchByString(term))\n    ).map((variantArrays: VariantReference[][]) => {\n        const mergedVariants: VariantReference[] = [];\n\n        const addVariant = (variant: VariantReference) => {\n          for (let arrayIndex = 0; arrayIndex < mergedVariants.length; arrayIndex++) {\n            // Make sure that we are sorting alphabetically.\n            if (mergedVariants[arrayIndex].mergeable(variant)) {\n              mergedVariants[arrayIndex].merge(variant);\n              console.log(\"Merged \" + variant.optionName());\n              return;\n            } else if (mergedVariants[arrayIndex].optionName() > variant.optionName()) {\n              mergedVariants.splice(arrayIndex, 0, variant);\n              return;\n            }\n          }\n\n          // It must\"ve not been pushed if we reach here.\n          mergedVariants.push(variant);\n        };\n\n        // Variant merging/placing loop.\n        for (const variantArray of variantArrays) {\n          for (const variant of variantArray) {\n            addVariant(variant);\n          }\n        }\n        console.log(\"Got in response to \" + term, mergedVariants);\n        return mergedVariants;\n      }\n    );\n  }\n\n  // Merge all variant streams into a single one.\n  public getByReference = (reference: VariantReference): Observable<Variant> => {\n    // map them into a array of observables and forkJoin\n    console.log(\"Asked to get variant from \", reference);\n    return Observable.forkJoin(this.variantDatabases\n      .map(searchService => searchService.getByReference(reference))\n    ).map((variantArray: Variant[]) => {\n        const mergedVariant: Variant = variantArray[0];\n        for (let i = 1; i < variantArray.length; i++) {\n          if (mergedVariant.mergeable(variantArray[i])) {\n            mergedVariant.merge(variantArray[i]);\n          }\n        }\n        console.log(\"Got \", mergedVariant);\n        return mergedVariant;\n      }\n    ).mergeMap(variant => {\n      return Observable.forkJoin(this.geneDatabases\n        .map(geneService => geneService.updateVariantOrigin(variant))\n      ).map((updatedVariants: Variant[]) => {\n        const mergedVariant: Variant = updatedVariants[0];\n        for (let i = 1; i < updatedVariants.length; i++) {\n          if (mergedVariant.mergeable(updatedVariants[i])) {\n            mergedVariant.merge(updatedVariants[i]);\n          }\n        }\n        console.log(\"Updated origin to \", mergedVariant);\n        return mergedVariant;\n      });\n    });\n  }\n}\n","/**\n * The best way to learn is through the experiences of others, and accessing the databse of past clinical trials\n * often is the best way to glean such information.\n */\n\nimport {Component, forwardRef, Input, OnInit} from \"@angular/core\";\nimport { ClinicalTrialsService } from \"./clinical-trials.service\";\nimport { ClinicalTrialReference } from \"./clinical-trials\";\nimport { Variant } from \"../../genomic-data\";\nimport {NG_VALUE_ACCESSOR} from \"@angular/forms\";\n\nexport const CLINICAL_TRIALS_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => ClinicalTrialsComponent),\n  multi: true\n};\n\n@Component({\n  selector: \"clinical-trials\",\n  template: `    \n    <table class=\"table table-hover table-bordered\">\n      <thead>\n      <tr>\n        <th>Clinical Trial ID</th>\n        <th>Phase</th>\n        <th>Brief Title</th>\n        <th>Drugs</th>\n        <th>Principal Investigator</th>\n      </tr>\n      </thead>\n      <tbody>\n      <ng-container *ngIf=\"clinicalTrials.length >= 0\" >\n        <tr *ngFor=\"let clinicalTrial of clinicalTrials\" class=\"variantRow\" (click)=\"getDataFor(clinicalTrial)\">\n          <td>{{clinicalTrial.nci_id}}</td>\n          <td>{{clinicalTrial.phase}}</td>\n          <td>{{clinicalTrial.brief_title}}</td>\n          <td>{{clinicalTrial.drugsToString()}}</td>\n          <td>{{clinicalTrial.principal_investigator}}</td>\n        </tr>\n      </ng-container>\n      <ng-container *ngIf=\"clinicalTrials.length === 0\" >\n        <tr>\n          <td>Loading...</td>\n        </tr>\n      </ng-container>\n      </tbody>\n    </table>\n  `,\n  styles: [``],\n  providers: [CLINICAL_TRIALS_CONTROL_VALUE_ACCESSOR]\n})\nexport class ClinicalTrialsComponent {\n  constructor (public clinicalTrialsService: ClinicalTrialsService) {}\n\n  // Clinical trials references.\n  clinicalTrials: ClinicalTrialReference[] = [];\n\n  // The internal data model (for ngModel)\n  _currentlySelected: Variant = null;\n  get currentlySelected(): any {\n    return this._currentlySelected;\n  }\n  set currentlySelected(v: any) {\n    if (v !== this.currentlySelected) {\n      this._currentlySelected = v;\n      this.clinicalTrialsService.searchClinicalTrials(v).subscribe(trials => this.clinicalTrials = trials);\n\n      this.onChangeCallback(v);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.currentlySelected) {\n      this.currentlySelected = value;\n    }\n  }\n\n  // Placeholders for the callbacks which are later providesd by the Control Value Accessor\n  private onTouchedCallback: () => void = () => {};\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  private onChangeCallback: (_: any) => void = () => {};\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n\n  // Currently only logs to console.\n  getDataFor(reference: ClinicalTrialReference) {\n    this.clinicalTrialsService.getDetailsFor(reference).subscribe(details => console.log(details));\n  }\n}\n","/**\n * The clinical trials API provides a method through which one can glean data obtained via clinicaltrials.gov.\n * Note that the API is available at clinicaltrialsapi.cancer.gov instead.\n */\nimport { Variant } from \"../../genomic-data\";\nimport { Observable } from \"rxjs/Observable\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { ClinicalTrialReference, ClinicalTrial } from \"./clinical-trials\";\nimport { Drug, DrugReference } from \"../drugs/drug\";\n\n/**\n * Based on the Angular and RxJS documentation, this is the best way to deal with sequential HTTP requests (those\n * that have results which vary based on the results to prior queries).\n */\nimport \"rxjs/add/operator/mergeMap\";\n\n/**\n * Both searches for and provides data for different clinical trials.\n */\n@Injectable()\nexport class ClinicalTrialsService {\n  constructor (public http: HttpClient) {}\n\n  // Reduces typing involved :P\n  queryEndpoint = \"https://clinicaltrialsapi.cancer.gov/v1/clinical-trials?\";\n\n  /**\n   * What I\"m trying to do for this method is obtain some examples of clinical trials being carried out on the\n   * variants (also gene, but preferably variants) that the user filled out.  We get a max of 10 clinical trials\n   * for each gene/variant combo.  The priority trials go to the variant (we query based on name, then HGVS ID),\n   * and then finally we query for trials that involved this gene if that doesn\"t work out.\n   */\n  searchClinicalTrials = (variant: Variant): Observable<ClinicalTrialReference[]> => {\n\n    // Gets a list of clinical trial references from the single JSON object.\n    const clinicalTrialJSONtoReferences = (jsonObject: Object): ClinicalTrialReference[] => {\n      const references: ClinicalTrialReference[] = [];\n      for (const trial of jsonObject[\"trials\"]) {\n        const drugsArray: DrugReference[] = [];\n        for (const intervention of trial.arms[0].interventions) {\n          if (intervention.intervention_type === \"Drug\") {\n            const newDrug = new DrugReference(intervention.intervention_name);\n            drugsArray.push(newDrug);\n          }\n        }\n        references.push(new ClinicalTrialReference(trial.nci_id, trial.phase.phase, trial.brief_title, drugsArray, trial.principal_investigator));\n      }\n\n      return references;\n    };\n\n    // Requirements before constructing queries.\n    const desiredTrials: number = 10;\n    const includes: string[] = [\"brief_title\", \"nci_id\", \"principal_investigator\", \"phase.phase\", \"arms\"];\n\n    // Determine includes.\n    let includeString = \"\";\n    for (const include of includes) {\n      includeString = includeString + \"&include=\" + include;\n    }\n\n    // 1. Query for variant name in the clinical trials database.\n    return this.http\n      .get(this.queryEndpoint + \"size=\" + desiredTrials + \"&_fulltext=\" + encodeURIComponent(variant.variantName) + includeString)\n      .mergeMap(result1 => {\n        console.log(\"1. Got name query results:\", result1);\n\n        const result1References = clinicalTrialJSONtoReferences(result1);\n\n        // If we don\"t have the max number of trials already.\n        if (result1References.length < desiredTrials) {\n\n          // 2. Query for the variant HGVS ID in the clinical trials database.\n          return this.http\n            .get(this.queryEndpoint + \"size=\" + (desiredTrials - result1References.length) + \"&_fulltext=\" + variant.hgvsID + includeString)\n            .map(result2 => {\n              console.log(\"2. Got HGVS query results:\", result2);\n\n              const referenceArray2: ClinicalTrialReference[] = result1References;\n\n              // For every HGVS clinical trial reference.\n              for (const result2Reference of clinicalTrialJSONtoReferences(result2)) {\n                let existsInArray = false;\n\n                for (const currentReference of referenceArray2) {\n                  if (result2Reference.brief_title === currentReference.brief_title) {\n                    existsInArray = true;\n                    break; // This reference must already be part of the array.\n                  }\n                }\n\n                // Add it to the array if it doesn\"t already exist.\n                if (!existsInArray) {\n                  referenceArray2.push(result2Reference);\n                }\n              }\n\n              return referenceArray2;\n            });\n        } else {\n          console.log(\"Returning result 1 references since long enough\");\n          return Observable.of(result1References);\n        }\n      })\n      .mergeMap(result2References => {\n        if (result2References.length < desiredTrials) {\n\n          // 2. Query for the variant HGVS ID in the clinical trials database.\n          return this.http\n            .get(this.queryEndpoint + \"size=\" + (desiredTrials - result2References.length) + \"&_fulltext=\" + variant.origin.hugoSymbol + includeString)\n            .map(result3 => {\n              console.log(\"3. Got HUGO query results:\", result3);\n\n              const referenceArray3: ClinicalTrialReference[] = result2References;\n              const result3References = clinicalTrialJSONtoReferences(result3);\n\n              // For every HGVS clinical trial reference.\n              for (const result3Reference of result3References) {\n                let existsInArray = false;\n\n                for (const currentReference of referenceArray3) {\n                  if (result3Reference.brief_title === currentReference.brief_title) {\n                    existsInArray = true;\n                    break; // This reference must already be part of the array.\n                  }\n                }\n\n                // Add it to the array if it doesn\"t already exist.\n                if (!existsInArray) {\n                  referenceArray3.push(result3Reference);\n                }\n              }\n\n              return referenceArray3;\n            });\n        } else {\n          console.log(\"Returning result 2 references since long enough\");\n          return Observable.of(result2References);\n        }\n      });\n  }\n\n  getDetailsFor = (clinicalTrialReference: ClinicalTrialReference): Observable<ClinicalTrial> => {\n    return this.http.get(this.queryEndpoint + \"size=1&include=official_title&include=brief_summary&nci_id=\" + clinicalTrialReference.nci_id)\n      .map(response => {\n        return new ClinicalTrial(clinicalTrialReference, response[\"trials\"][0].official_title, response[\"trials\"][0].brief_summary);\n      });\n  }\n}\n","/**\n * A reference to a given clinical trial, which carries an ID property used to obtain more information about it.\n */\nimport { DrugReference } from \"../drugs/drug\";\n\nexport class ClinicalTrialReference {\n  constructor(_nci_id: string, _phase: string, _brief_title: string, _drugs: DrugReference[], _principal_investigator: string) {\n    this.nci_id = _nci_id;\n    this.phase = _phase;\n    this.brief_title = _brief_title;\n    this.drugs = _drugs;\n    this.principal_investigator = _principal_investigator;\n  }\n\n  nci_id: string;\n  phase: string;\n  brief_title: string;\n  drugs: DrugReference[];\n  principal_investigator: string;\n\n  drugsToString = (): string => {\n    if (!this.drugs || this.drugs.length === 0) {\n      return \"\";\n    }\n\n    let drugsString = this.drugs[0].name;\n    for (let i = 1; i < this.drugs.length; i++) {\n      if (i < this.drugs.length - 1) {\n        drugsString = drugsString + \", \" + this.drugs[i].name;\n      } else {\n        drugsString = drugsString + \", and \" + this.drugs[i].name;\n      }\n\n    }\n\n    return drugsString;\n  }\n}\n\n/**\n * The extension of a clinical trial reference which provides access to more data about a given trial.\n */\nexport class ClinicalTrial extends ClinicalTrialReference {\n  constructor (clinicalTrialReference: ClinicalTrialReference, _official_title: string, _brief_summary: string) {\n    super(clinicalTrialReference.nci_id, clinicalTrialReference.phase, clinicalTrialReference.brief_title, clinicalTrialReference.drugs, clinicalTrialReference.principal_investigator);\n\n    this.official_title = _official_title;\n    this.brief_summary = _brief_summary;\n  }\n\n  official_title: string;\n  brief_summary: string;\n}\n","/**\n * A part of the result visualization component, which displays the drugs that will be effective against genes\n * or variants.\n */\n\nimport { Component, Input, OnInit } from \"@angular/core\";\nimport { Drug, DrugReference } from \"./drug\";\nimport { DrugsSearchService } from \"./drugs-search.service\";\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\n\n@Component({\n  selector: \"drugs-modal\",\n  template: `\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">{{drugReference.name}} details</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <!-- A bit of info about the drug -->\n      <table class=\"table table-bordered table-striped\" *ngIf=\"drugModel !== undefined\">\n        <thead>\n        </thead>\n        <tbody>\n        <tr *ngIf=\"drugModel.description !== undefined\">\n          <td>Description</td>\n          <td>{{drugModel.description}}</td>\n        </tr>\n        <ng-container *ngIf=\"drugModel.interactions !== undefined && drugModel.interactions.length > 0\">\n          <tr>\n            <td style=\"font-weight: bold;\">Gene</td>\n            <td style=\"font-weight: bold;\">Interaction Types</td>\n          </tr>\n          <tr *ngFor=\"let interaction of drugModel.interactions\">\n            <td>{{interaction.geneTarget.hugoSymbol}}</td>\n            <td>\n              <table class=\"table table-bordered\"\n                     *ngIf=\"interaction.interactionTypes !== undefined && interaction.interactionTypes.length > 0\">\n                <thead>\n                <td>Interaction Type</td>\n                <td>Sources</td>\n                </thead>\n                <tbody>\n                <tr *ngFor=\"let interactionType of interaction.interactionTypes\">\n                  <td style=\"width: 20%\">{{interactionType.name}}</td>\n                  <td style=\"width: 80%\" *ngIf=\"interactionType.sources !== undefined\">\n                    {{interactionType.sources.join(', ')}}\n                  </td>\n                </tr>\n                </tbody>\n              </table>\n            </td>\n          </tr>\n        </ng-container>\n        </tbody>\n      </table>\n    </div>\n  `,\n  styles: [`\n  `]\n})\nexport class DrugDetailsModalComponent implements OnInit {\n  constructor (public drugSearchService: DrugsSearchService, public activeModal: NgbActiveModal) {}\n\n  @Input() drugReference: DrugReference;\n  drugModel: Drug;\n\n  ngOnInit() {\n    if (!this.drugReference) {\n      return;\n    }\n\n    this.drugSearchService.searchByReference(this.drugReference).subscribe(drug => {\n      console.log(\"Got drug from reference\", drug);\n      this.drugModel = drug;\n    });\n  }\n}\n","/**\n * One of the primary things that clinicians will need to see are the drugs which are most likely to be effective\n * against different genes and variants.\n */\n\nimport { Gene } from \"../../genomic-data\";\nimport { IMergeable, MergeProperties } from \"../../data-merging\";\n\nexport class DrugReference {\n  constructor (_name: string) {\n    this.name = _name;\n  }\n\n  name: string;\n\n  brief_name = (): string => {\n    return (this.name.indexOf(\" \") >= 0 ? this.name.substring(0, this.name.indexOf(\" \")) : this.name);\n  }\n}\n\nexport class InteractionType {\n  constructor (_name: string, _sources: string[]) {\n    this.name = _name;\n    this.sources = _sources;\n  }\n  name: string;\n  sources: string[];\n}\n\nexport class GeneInteraction {\n  constructor (_geneTarget: Gene, _sourceClassifications: InteractionType[]) {\n    this.geneTarget = _geneTarget;\n    this.interactionTypes = _sourceClassifications;\n  }\n  geneTarget: Gene;\n  interactionTypes: InteractionType[];\n}\n\nexport class Drug extends DrugReference implements IMergeable {\n  constructor (_name: string) {\n    super(_name);\n  }\n\n  description: string;\n  interactions: GeneInteraction[];\n\n  mergeable = (other: Drug) => {\n    return this.name === other.name;\n  }\n\n  // Merges another gene into this gene (overwriting properties if the property of one is undefined).\n  merge = (other: Drug) => {\n    this.description = MergeProperties(this.description, other.description);\n    this.interactions = MergeProperties(this.interactions, other.interactions);\n  }\n}\n\n","/**\n * This service, like the data entry service, queries for and merges duplicate drugs for given genes.\n */\n\nimport { Drug, DrugReference, InteractionType, GeneInteraction } from \"./drug\";\nimport { Observable } from \"rxjs/Observable\";\nimport { Injectable } from \"@angular/core\";\nimport { Gene } from \"../../genomic-data\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable()\nexport class DrugsSearchService {\n  constructor (private http: HttpClient) {}\n\n  public searchByReference(reference: DrugReference): Observable <Drug> {\n    return this.http.get(\"https://dgidb.genome.wustl.edu/api/v1/interactions.json?drugs=\" + (reference.name.indexOf(\" \") >= 0 ? reference.name.substring(0, reference.name.indexOf(\" \")) : reference.name))\n      .map(result => {\n\n        const newDrug = new Drug(reference.name);\n\n        if (!(result[\"matchedTerms\"] && result[\"matchedTerms\"].length >= 0 && result[\"matchedTerms\"][0].interactions)) {\n          return;\n        }\n\n        newDrug.interactions = [];\n        const addInteractionType = (interaction: GeneInteraction, interactionTypeName: string, sourceName: string) => {\n          for (const interactionType of interaction.interactionTypes) {\n            if (interactionType.name === interactionTypeName) {\n              interactionType.sources.push(sourceName);\n              return;\n            }\n          }\n\n          // Add new interaction type if source not found.\n          interaction.interactionTypes.push(new InteractionType(interactionTypeName, [sourceName]));\n        };\n        const addInteraction = (interactionData: any) => {\n          const currentGeneTarget: string = interactionData.geneName;\n          const currentInteractionType: string = interactionData.interactionType;\n          const currentSource: string = interactionData.source;\n          for (const interaction of newDrug.interactions) {\n            if (interaction.geneTarget.hugoSymbol === currentGeneTarget) {\n              console.log(\"Found mergeable\");\n              addInteractionType(interaction, currentInteractionType, currentSource);\n              return;\n            }\n          }\n\n          newDrug.interactions.push(new GeneInteraction(new Gene(currentGeneTarget), [new InteractionType(currentInteractionType, [currentSource])]));\n        };\n        console.log(\"Interaction JSON is \", result[\"matchedTerms\"][0].interactions);\n        for (const jsonInteraction of result[\"matchedTerms\"][0].interactions) {\n          addInteraction(jsonInteraction);\n        }\n\n        return newDrug;\n      });\n  }\n}\n","/**\n * Visualizing the data for the gene: a tab on the result visualization.\n */\n\nimport { Component, Input } from \"@angular/core\";\nimport { Gene } from \"../../genomic-data\";\n\n@Component({\n  selector: \"gene-information\",\n  template: `\n    <ng-container *ngIf=\"gene !== undefined\">\n      <br>\n      <h3 class=\"display-3\">\n        {{gene.hugoSymbol}}\n        <small class=\"text-muted\">{{gene.name}}</small>\n      </h3>\n\n      <div style=\"width: 70%; float: left;\">\n        <div class=\"card\">\n          <!--<img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\">-->\n          <div class=\"card-block\">\n            <h4 class=\"card-title\">Gene Description</h4>\n            <p class=\"card-text\">{{gene.description}}</p>\n          </div>\n        </div>\n\n        <div class=\"card\">\n          <div class=\"card-block\" *ngIf=\"gene.pathways !== undefined && gene.pathways.length > 0\">\n            <h4 class=\"card-title\">Gene Pathways</h4>\n            <p class=\"card-text\">{{gene.pathwaysString()}}</p>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"card\" style=\"width: 30%; float: left;\">\n        <!--<img class=\"card-img-top\" src=\"...\" alt=\"Card image cap\">-->\n        <div class=\"card-block\">\n          <h4 class=\"card-title\">Gene Details</h4>\n          <!-- A bit of info about the variant/gene -->\n          <table class=\"table table-bordered\">\n            <thead>\n            </thead>\n            <tbody>\n            <tr *ngIf=\"gene.entrezID !== undefined\">\n              <td>Entrez ID</td>\n              <td>{{gene.entrezID}}</td>\n            </tr>\n            <tr *ngIf=\"gene.type !== undefined\">\n              <td>Type</td>\n              <td>{{gene.type}}</td>\n            </tr>\n            <tr *ngIf=\"gene.aliases !== undefined && gene.aliases.length > 0\">\n              <td>Aliases</td>\n              <td>{{gene.aliases.join(\", \")}}</td>\n            </tr>\n            <tr *ngIf=\"gene.chromosome !== undefined\">\n              <td>Chromosome</td>\n              <td>{{gene.chromosome}}</td>\n            </tr>\n            <tr *ngIf=\"gene.strand !== undefined\">\n              <td>Strand</td>\n              <td>{{gene.strand}}</td>\n            </tr>\n            <tr *ngIf=\"gene.start !== undefined && gene.end !== undefined\">\n              <td>Nucleotides</td>\n              <td>{{gene.start}} to {{gene.end}}</td>\n            </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </ng-container>\n  `,\n  styles: [`\n    small {\n      font-size: 25px;\n    }\n    \n    .card {\n      padding: 10px;\n    }\n  `]\n})\nexport class GeneInformationComponent {\n  @Input() gene: Gene;\n}\n","/**\n * Wrapper class of tabs for a bunch of post- data-entry components (Clinical Trials, etc.)\n */\n\nimport { Component, forwardRef } from \"@angular/core\";\nimport { Variant} from \"../genomic-data\";\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nexport const VISUALIZATION_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => VariantVisualizationComponent),\n  multi: true\n};\n\n@Component({\n  selector: \"variant-visualization\",\n  template: `\n    <!-- Tabs to view the variant's info.  -->\n    <ngb-tabset [destroyOnHide]=\"false\" *ngIf=\"currentlySelected !== undefined && currentlySelected !== null\">\n      <ngb-tab title=\"Gene\">\n        <ng-template ngbTabContent>\n          <gene-information [gene]=\"currentlySelected.origin\"></gene-information>\n        </ng-template>\n      </ngb-tab>\n\n      <ngb-tab title=\"Variant\">\n        <ng-template ngbTabContent>\n          <variant-information [variant]=\"currentlySelected\"></variant-information>\n        </ng-template>\n      </ngb-tab>\n\n      <ngb-tab title=\"Clinical Trials\">\n        <ng-template ngbTabContent>\n          <clinical-trials [(ngModel)]=\"currentlySelected\"></clinical-trials>\n        </ng-template>\n      </ngb-tab>\n    </ngb-tabset>\n  `,\n  styles: [`    \n  `],\n  providers: [VISUALIZATION_CONTROL_VALUE_ACCESSOR]\n})\nexport class VariantVisualizationComponent implements ControlValueAccessor {\n  // The internal data model (for ngModel)\n  _currentlySelected: Variant = null;\n  get currentlySelected(): any {\n    return this._currentlySelected;\n  }\n  set currentlySelected(v: any) {\n    if (v !== this.currentlySelected) {\n      this._currentlySelected = v;\n      this.onChangeCallback(v);\n    }\n  }\n\n  // From ControlValueAccessor interface\n  writeValue(value: any) {\n    if (value !== this.currentlySelected) {\n      this.currentlySelected = value;\n    }\n  }\n\n  // Placeholders for the callbacks which are later providesd by the Control Value Accessor\n  private onTouchedCallback: () => void = () => {};\n  registerOnTouched(fn: any) {\n    this.onTouchedCallback = fn;\n  }\n  private onChangeCallback: (_: any) => void = () => {};\n  registerOnChange(fn: any) {\n    this.onChangeCallback = fn;\n  }\n}\n","/**\n * A part of the result visualization component, which displays the drugs that will be effective against genes\n * or variants.\n */\n\nimport { Component, Input } from \"@angular/core\";\nimport { NgbActiveModal } from \"@ng-bootstrap/ng-bootstrap\";\nimport { Variant } from \"../../genomic-data\";\n\n@Component({\n  selector: \"classifications-modal\",\n  template: `\n    <div class=\"modal-header\">\n      <h4 class=\"modal-title\">{{variant.optionName()}} classifictions</h4>\n      <button type=\"button\" class=\"close\" aria-label=\"Close\" (click)=\"activeModal.dismiss('Cross click')\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <div class=\"modal-body\">\n      <!-- A bit of info about the drug -->\n      <table class=\"table table-bordered table-striped\" *ngIf=\"variant !== undefined\">\n        <thead>\n        </thead>\n        <tbody>\n        <ng-container *ngIf=\"variant.classifications !== undefined && variant.classifications.length > 0\">\n          <tr>\n            <td style=\"font-weight: bold;\">Classification</td>\n            <td style=\"font-weight: bold;\">Sources</td>\n          </tr>\n          <tr *ngFor=\"let classification of variant.classifications\">\n            <td>{{classification.name}}</td>\n            <td *ngIf=\"classification.sources !== undefined && classification.sources.length > 0\">\n              {{classification.sources.join(', ')}}\n            </td>\n          </tr>\n        </ng-container>\n        </tbody>\n      </table>\n      <br>\n    </div>\n  `,\n  styles: [`\n  `]\n})\nexport class ClassificationsModalComponent {\n  constructor (public activeModal: NgbActiveModal) {}\n\n  @Input() variant: Variant;\n}\n","/**\n * Visualizing the data for the variant: a tab on the results display.\n */\n\nimport {Component, EventEmitter, Input, Output} from \"@angular/core\";\nimport {DrugReference} from \"../drugs/drug\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {DrugDetailsModalComponent} from \"../drugs/drug-details-modal.component\";\nimport {ClassificationsModalComponent} from \"./classifications-modal.component\";\n\n@Component({\n  selector: \"variant-information\",\n  template: `\n    <ng-container *ngIf=\"variant\">\n      <br>\n      <h3 class=\"display-3\">{{variant.variantName}}</h3>\n  \n      <!-- A bit of info about the variant/gene -->\n      <table class=\"table table-bordered table-striped\">\n        <thead>\n        </thead>\n        <tbody>\n        <tr *ngIf=\"variant.description && variant.description !== ''\">\n          <td>Description</td>\n          <td>{{variant.description}}</td>\n        </tr>\n        <tr>\n          <td>Functional Prediction</td>\n          <td>\n            {{variant.score}} <span (click)=\"viewClassifications()\" class=\"badge badge-{{variant.getClassification().toLowerCase().indexOf('pathogenic') >= 0 ? 'danger' : 'info'}}\">{{variant.getClassification()}}</span>\n          </td>\n        </tr>\n        <tr>\n          <td>Variant Origin</td>\n          <td>{{variant.somatic ? 'Somatic' : 'Germline'}}</td>\n        </tr>\n        <tr *ngIf=\"variant.types && variant.types.length > 0\">\n          <td>Variant Type</td>\n          <td>{{variant.types.join(\", \")}}</td>\n        </tr>\n        <tr *ngIf=\"variant.drugs && variant.drugs.length > 0\">\n          <td>Effective Drugs</td>\n          <td>\n            <button *ngFor=\"let drugReference of variant.drugs\" class=\"btn btn-light\" (click)=\"viewDrugDetails(drugReference)\">{{drugReference.name}}</button>\n          </td>\n        </tr>\n        <tr *ngIf=\"variant.diseases && variant.diseases.length > 0\">\n          <td>Known Diseases</td>\n          <td>{{variant.diseases.join(\", \")}}</td>\n        </tr>\n        <tr>\n          <td>Variant Location</td>\n          <td>Chromosome {{variant.getLocation()}}</td>\n        </tr>\n        </tbody>\n      </table>\n    </ng-container>\n  `,\n  styles: [`\n    .badge {\n      opacity: 1;\n    }\n    \n    .badge:hover {\n      opacity: 0.8;\n    }\n    \n    .badge:active {\n      opacity: 0.6;\n    }\n  `]\n})\nexport class VariantInformationComponent {\n  constructor (private modalService: NgbModal) {}\n\n  @Input() variant;\n\n  viewDrugDetails(reference: DrugReference) {\n    const modalRef = this.modalService.open(DrugDetailsModalComponent, {size: \"lg\"});\n    modalRef.componentInstance.drugReference = reference;\n  }\n\n  viewClassifications() {\n    const modalRef = this.modalService.open(ClassificationsModalComponent, {size: \"lg\"});\n    modalRef.componentInstance.variant = this.variant;\n  }\n}\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"feedback-form-modal\",\n  template: `    \n    <iframe src=\"https://docs.google.com/forms/d/e/1FAIpQLSfLUXs73346HwTOxRI0G3rcdMBGBMulS4NyH3tj3aSG3MXD_Q/viewform?embedded=true\" width=\"800\" height=\"500\" frameborder=\"0\" marginheight=\"0\" marginwidth=\"0\">Loading...</iframe>\n  `\n})\nexport class FeedbackFormModalComponent {\n}\n","/**\n * The landing page for the app, which tells the user what the app does, what the purpose of the appis, and why\n */\nimport { Component } from \"@angular/core\";\nimport { trigger, state, style, animate, transition } from \"@angular/animations\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"home\",\n  template: `\n    <div class=\"infoCard\">\n      <div class=\"cardContent\">\n        <div>\n          <h1 class=\"thick\">The Issue</h1>\n          <hr>\n          <p class=\"regular\">\n            In a typical genomic non-SMART Cancer Navigator workflow, oncologists will prescribe a genomic analysis of a patient with a recurrent or metastatic tumor. Next, the genomics laboratory returns an unstructured narrative report relating a set of genes and the variants found in that set. Typically scanned into EHRs as PDF files, these reports persist as irregular unstructured documents of varying lengths. While some reports may be more than 20 pages in length – including characterizations of variants and gene abnormalities, potential targeted therapies, and relevant clinical trial info – others may be brief and without much interpretation. Facing a lack of clear actionability, potential biases in the curation of the reports, and outdated information, oncologists typically access and query several knowledge bases to obtain more comprehensive, up-to-date disease-gene-variant information. Therefore, oncologists must reenter patient data every time they wish to query a knowledge base. Inconsistencies among knowledge bases (i.e. differences in querying syntax, GUIs, APIs, etc.) thus lead to inconveniency and inefficiency.</p>\n        </div>\n        <div>\n          <h1 class=\"thick\">SMART Cancer Navigator's Approach</h1>\n          <hr>\n          <p class=\"regular\">The SMART Cancer Navigator app securely links patient-specific data from EHRs and genomics laboratories to multiple knowledge bases for interpretation and validation. Through the built-in feedback functionality, meaningful responses regarding the usability and efficacy of the app are conveyed to the designers.\n          </p>\n        </div>\n      </div>\n      <div class=\"cardImage\" style=\"min-width: 300px;\">\n        <div>\n          <img src=\"/assets/landing-page/app-content.png\">\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .infoCard {\n      margin: 10px 5px;\n      overflow: hidden;\n    }\n\n    .cardContent {\n      float: left;\n      width: 70%;\n    }\n\n    .cardImage {\n      float: left;\n      width: 30%;\n      min-width: 150px;\n      max-width: 100%;\n    }\n\n    .cardImage>div, .cardContent>div {\n      float: left;\n      background-color: white;\n      box-shadow: 1px 3px #d5d5d5;\n      border: 1px solid #d1d1d1;\n      padding: 15px;\n      margin: 7px 3px;\n    }\n    \n    .cardImage img {\n      width: 100%;\n      height: auto;\n    }\n  `],\n  animations: [\n  ]\n})\nexport class LandingPageComponent {\n  constructor (private router: Router) {}\n\n  navigateToVisualization() {\n    this.router.navigate([\"/app\"]);\n  }\n}\n","import { Component } from \"@angular/core\";\n\n@Component({\n  selector: \"team\",\n  template: `\n    <div style=\"overflow: hidden\">\n      <div class=\"cardContent\" *ngFor=\"let contributor of contributors\" style=\"margin: 15px 8px; width: calc(50% - 16px); min-width: 300px;\">\n        <div style=\"width: 100%;\">\n          <h2 class=\"thick\">{{contributor}}</h2>\n        </div>\n      </div>\n    </div>\n    \n    <hr>\n    \n    <div>\n      <div class=\"cardContent\" style=\"margin: 8px; width: calc(100% - 16px);\">\n        <div style=\"width: 100%;\">\n          <h2 class=\"thick\">Questions?  You can reach us at <a href=\"javascript:void(0)\" (click)=\"updateEmail()\">{{emailDisplay}}</a></h2>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`    \n    .cardContent {\n      float: left;\n    }\n\n    .cardImage {\n      float: left;\n      width: 30%;\n      min-width: 150px;\n      max-width: 100%;\n    }\n\n    .cardImage>div, .cardContent>div {\n      float: left;\n      background-color: white;\n      box-shadow: 1px 3px #d5d5d5;\n      border: 1px solid #d1d1d1;\n      padding: 15px;\n      text-align: center;\n    }\n\n    .cardImage img {\n      width: 100%;\n      height: auto;\n    }\n  `]\n})\nexport class TeamComponent {\n  contributors: string[] = [\"Gil Alterovitz, PhD\", \"Jeremy Warner, MD, MS\", \"Makiah Bennett\", \"Ishaan Prasad\", \"Monica Arniella\", \"Alicia Beeghly-Fadiel, PhD\"];\n\n  emailDisplay: string = \"(Click to reveal)\";\n  updateEmail(): void\n  {\n    this.emailDisplay = \"ga@alum.mit.edu\";\n  }\n}\n","/**\n * Since the SMART on FHIR framework is not built to work with Angular2, this component controls the\n * redirects involved in authentication for fhir-client.js.\n */\n\n// Modules required to access URL parameters.\nimport { Router, ActivatedRoute, Params } from \"@angular/router\";\nimport { OnInit, Component } from \"@angular/core\";\nimport { SMARTModule } from \"./smart-reference.service\";\nimport {isNullOrUndefined} from \"util\";\n\n@Component({\n  selector: \"smart-launch\",\n  template: `\n    <div *ngIf=\"requiredParametersSupplied === true\">\n      <h3 class=\"display-3\" style=\"width: 100%; text-align: center;\">Enter Authorization Info</h3>\n      <div class=\"inputPanel\">\n        <label class=\"thick\">Client ID: </label>\n        <input class=\"form-control\" type=\"text\" [(ngModel)]=\"clientID\" placeholder=\"Ex: 1e7af332-b27a-4de2-8c51-728ae3ed25c2\">\n      </div>\n      <div class=\"inputPanel\">\n        <label class=\"thick\">Scopes: </label>\n        <input class=\"form-control\" type=\"text\" [(ngModel)]=\"scopes\">\n      </div>\n      <br>\n      <button (click)=\"authorizeApp()\" class=\"btn btn-success\" style=\"margin: 20px 5%; width: 90%; height: 60px;\">Authorize</button>\n    </div>\n    \n    <p *ngIf=\"requiredParametersSupplied === false\">ISS and Launch parameters were not supplied!  Redirecting in 3 seconds...</p>\n  `,\n  styles: [`\n    div {\n      padding: 10px;\n      overflow: hidden;\n    }\n    \n    div * {\n      float: left;\n    }\n    \n    .inputPanel {\n      width: 100%;\n    }\n    \n    .inputPanel>* {\n      float: left;\n    }\n\n    label {\n      width: 150px;\n      font-size: 25px;\n      margin: 0;\n    }\n    \n    input {\n      width: calc(90% - 152px);\n    }\n  `]\n})\nexport class SMARTLaunchComponent implements OnInit {\n  constructor(private router: Router, private activatedRoute: ActivatedRoute) {}\n\n  requiredParametersSupplied = false;\n  clientID = \"\";\n  scopes = \"launch patient/*.* openid profile\";\n\n  ngOnInit() {\n    // subscribe to router event\n    this.activatedRoute.queryParams.subscribe((params: Params) => {\n      if (params[\"iss\"] && params[\"launch\"]) {\n        this.requiredParametersSupplied = true;\n      } else {\n        this.requiredParametersSupplied = false;\n        setTimeout(() => { this.router.navigate([\"/app\"]); }, 3000); // Wait a second before redirecting.\n      }\n    });\n  }\n\n  authorizeApp = () => {\n    SMARTModule.oauth2.authorize({\n      client_id: this.clientID,\n      scope: this.scopes,\n      redirect_uri: window.location.href.substring(0, window.location.href.lastIndexOf(\"/\")) + \"/token-reception\"\n    });\n  }\n}\n","/**\n * Since SMART is a JS library, this is a utility class used to make it easier to work with the JS library.\n * By declaring FHIR below, the library is referenced from .angular-cli.json, and functions can be used\n * directly from the library.  In order to get this to work like global variables, I found that the best way\n * would be to use an Observable, a backend framework of Angular known as RxJS.\n * https://stackoverflow.com/questions/36715918/how-to-define-global-variables-in-angular-2-in-a-way-that-i-\n * can-use-them-for-pro\n * https://stackoverflow.com/questions/34714462/updating-variable-changes-in-components-from-a-service-with-angular2\n */\n\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\n\ndeclare const FHIR: any;\nexport const SMARTModule = FHIR;\n\n// Make sure to use BehaviorSubject over Subject, since it provides the current value of the object on subscribe()\nexport let SMARTClient: BehaviorSubject<any> = new BehaviorSubject<any>(null);\n\nexport class SMARTReferenceService {\n  ready() {\n    SMARTModule.oauth2.ready(function (smart) {\n      SMARTClient.next(smart);\n    });\n  }\n}\n","/**\n * After being directed here as per the redirect_uri in smart-launch, this route receives the token\n * data and then applies the token as necessary.\n */\n\n// Modules required to access URL parameters.\nimport { Router } from \"@angular/router\";\nimport { OnInit, Component } from \"@angular/core\";\nimport { SMARTReferenceService } from \"./smart-reference.service\";\n\n@Component({\n  selector: \"smart-launch\",\n  template: `\n    <p>{{state}}</p>\n  `\n})\n\nexport class SMARTTokenReceptionComponent implements OnInit {\n  constructor(private smartReferenceService: SMARTReferenceService, private router: Router) {}\n\n  state = \"Receiving token...\";\n\n  ngOnInit() {\n    // Set up the client reference.\n    this.smartReferenceService.ready();\n\n    // Redirect to the disease selection.\n    setTimeout(() => this.router.navigate([\"/app\"]), 100);\n  }\n}\n","import {Component} from \"@angular/core\";\n\n@Component({\n  selector: \"github-fork-us\",\n  template: `\n    <div>\n      <a target=\"_blank\" href=\"https://www.github.com/smart-cancer-navigator/Application\">\n        <img class=\"hvr-grow\" src=\"/assets/github-icon.png\">\n      </a>\n    </div>\n  `,\n  styles: [`\n    div {\n      display: block;\n      position: fixed;\n      right: 5px;\n      bottom: 5px;\n      z-index: 50;\n      //background-color: black;\n      border-radius: 25px;\n    }\n    \n    * {\n      height: 60px;\n      width: 60px;\n    }\n\n    .hvr-grow {\n      display: inline-block;\n      vertical-align: middle;\n      transform: translateZ(0);\n      box-shadow: 0 0 1px rgba(0, 0, 0, 0);\n      backface-visibility: hidden;\n      -moz-osx-font-smoothing: grayscale;\n      transition-duration: 0.3s;\n      transition-property: transform;\n    }\n\n    .hvr-grow:hover, .hvr-grow:focus, hvr-grow:active {\n      transform: scale(1.1);\n    }\n\n  `]\n})\nexport class GithubForkUsComponent {\n}\n","import {Component} from \"@angular/core\";\nimport {NavigationEnd, Router} from \"@angular/router\";\n\n@Component({\n  selector: \"header\",\n  template: `\n    <div id=\"greyBackground\"></div>\n\n    <div id=\"container\">\n      <img src=\"/assets/logo.svg\">\n\n      <div id=\"routingOptions\">\n        <div class=\"routeOption {{currentRoute === '/home' ? 'selectedRoute' : 'unselectedRoute'}}\" (click)=\"routeTo('home')\">\n          <p>Home</p>\n        </div>\n        <div class=\"routeOption {{currentRoute === '/team' ? 'selectedRoute' : 'unselectedRoute'}}\" (click)=\"routeTo('team')\">\n          <p>Team</p>\n        </div>\n        <div class=\"routeOption {{currentRoute === '/ehr-link' ? 'selectedRoute' : 'unselectedRoute'}}\" (click)=\"routeTo('ehr-link')\">\n          <p>EHR Link</p>\n        </div>\n        <div class=\"routeOption {{currentRoute === '/db-analysis' ? 'selectedRoute' : 'unselectedRoute'}}\" (click)=\"routeTo('db-analysis')\">\n          <p>DB Analysis</p>\n        </div>\n        <div style=\"width: 1px; height: 76px; float: left; background-color: #a4a4a4; margin: 2px 3px;\">\n        </div>\n        <div class=\"routeOption {{currentRoute === '/app' ? 'selectedRoute' : 'unselectedRoute'}}\"\n             (click)=\"routeTo('app');\">\n          <p>Try It Out!</p>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    p {\n      margin: 0;\n    }\n\n    #greyBackground {\n      width: 100vw;\n      height: 100vh;\n      background-color: #eeeeee;\n      position: fixed;\n      z-index: -50;\n    }\n\n    #container {\n      background-color: white;\n      width: 100%;\n\n      padding-left: 30px;\n\n      box-shadow: 0 2px 4px #b4b4b4;\n\n      overflow: hidden;\n    }\n\n    #container img {\n      height: 40px;\n      width: auto;\n      margin-top: 20px;\n      margin-bottom: 20px;\n      float: left;\n    }\n\n    #routingOptions {\n      min-width: 500px;\n      height: 100%;\n      overflow: hidden;\n      float: right;\n    }\n\n    .routeOption {\n      float: left;\n      color: #2f2f2f;\n\n      text-align: center;\n      height: 60px;\n      width: calc(100% / 5 - 8px); /* +1 px for each for border div */\n      margin: 10px 3px;\n\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      cursor: default;\n      border-radius: 5px;\n    }\n\n    .unselectedRoute {\n      background-color: white;\n    }\n\n    .unselectedRoute:hover {\n      background-color: #dbdbdb;\n    }\n\n    .unselectedRoute:active {\n      background-color: #cbcbcb;\n    }\n\n    .selectedRoute {\n      background-color: #27384f;\n      color: white;\n    }\n  `]\n})\nexport class HeaderComponent {\n  constructor (private router: Router) {\n    router.events.subscribe((val) => {\n      if (val instanceof NavigationEnd) {\n        this.currentRoute = val.urlAfterRedirects;\n      }\n    });\n  }\n\n  currentRoute: string = \"/app\";\n\n  routeTo(routeLoc: string) {\n    this.router.navigate([routeLoc]);\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}